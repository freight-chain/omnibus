{
  "swagger": "2.0",
  "info": {
    "version": "v1",
    "title": "Wrapped EDI"
  },
  "basePath": "/",
  "paths": {
    "/api/Account/users/me": {
      "get": {
        "tags": [
          "Account"
        ],
        "operationId": "GetCurrentUser",
        "consumes": [],
        "produces": [],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UserViewModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Account"
        ],
        "operationId": "UpdateCurrentUser",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UserEditViewModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "Account"
        ],
        "operationId": "UpdateCurrentUser",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "patch",
            "in": "body",
            "required": false,
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/Operation"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Account/users/{id}": {
      "get": {
        "tags": [
          "Account"
        ],
        "operationId": "GetUserById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UserViewModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Account"
        ],
        "operationId": "UpdateUser",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "user",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UserEditViewModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Account"
        ],
        "operationId": "DeleteUser",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UserViewModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "Account"
        ],
        "operationId": "UpdateUser",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "patch",
            "in": "body",
            "required": false,
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/Operation"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Account/users/username/{userName}": {
      "get": {
        "tags": [
          "Account"
        ],
        "operationId": "GetUserByUserName",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "userName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UserViewModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Account/users": {
      "get": {
        "tags": [
          "Account"
        ],
        "operationId": "GetUsers",
        "consumes": [],
        "produces": [],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserViewModel"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "Register",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UserEditViewModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Account/users/{page}/{pageSize}/{companyId}": {
      "get": {
        "tags": [
          "Account"
        ],
        "operationId": "GetUsers",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "page",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "companyId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserViewModel"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Account/users/company": {
      "get": {
        "tags": [
          "Account"
        ],
        "operationId": "GetUsersByCurrentCompany",
        "consumes": [],
        "produces": [],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserViewModel"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "RegisterUserForCurrentCompany",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UserEditViewModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Account/users/company/{page}/{pageSize}": {
      "get": {
        "tags": [
          "Account"
        ],
        "operationId": "GetUsersByCurrentCompany",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "page",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserViewModel"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Account/company/{id}": {
      "get": {
        "tags": [
          "Account"
        ],
        "operationId": "GetCompanyById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CompanyViewModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Account/company": {
      "get": {
        "tags": [
          "Account"
        ],
        "operationId": "GetCompany",
        "consumes": [],
        "produces": [],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CompanyServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "UpdateCompany",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CompanyServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CompanyServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Account/companies": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "GetCompanies",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Query"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QueryResult[CompanyServiceModel]"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Account/company/subdomain/{id}": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "CreateCompanySubdomain",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CompanyServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Account/companies/{id}": {
      "delete": {
        "tags": [
          "Account"
        ],
        "operationId": "DeleteCompany",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CompanyServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Account/registerCompany": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "RegisterCompany",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "registration",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/RegisterCompanyViewModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Account/activateAccountWithPassword": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "ActivateAccountWithPassword",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ResetPasswordViewModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Account/resendAccountActivationEmail": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "ResendAccountActivationEmail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Account/confirmEmail": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "ConfirmEmail",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ConfirmEmailViewModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Account/forgotPassword": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "ForgotPassword",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ForgotPasswordViewModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Account/resetPassword": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "ResetPassword",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ResetPasswordViewModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Account/users/unblock/{id}": {
      "put": {
        "tags": [
          "Account"
        ],
        "operationId": "UnblockUser",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Account/users/me/preferences": {
      "get": {
        "tags": [
          "Account"
        ],
        "operationId": "UserPreferences",
        "consumes": [],
        "produces": [],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Account"
        ],
        "operationId": "UserPreferences",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Account/roles/{id}": {
      "get": {
        "tags": [
          "Account"
        ],
        "operationId": "GetRoleById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RoleViewModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Account"
        ],
        "operationId": "UpdateRole",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "role",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/RoleViewModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Account"
        ],
        "operationId": "DeleteRole",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RoleViewModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Account/roles/name/{name}": {
      "get": {
        "tags": [
          "Account"
        ],
        "operationId": "GetRoleByName",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RoleViewModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Account/roles": {
      "get": {
        "tags": [
          "Account"
        ],
        "operationId": "GetRoles",
        "consumes": [],
        "produces": [],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/RoleViewModel"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "CreateRole",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "role",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/RoleViewModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Account/roles/editable": {
      "get": {
        "tags": [
          "Account"
        ],
        "operationId": "GetRolesEditable",
        "consumes": [],
        "produces": [],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/RoleViewModel"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Account/roles/editable/{page}/{pageSize}": {
      "get": {
        "tags": [
          "Account"
        ],
        "operationId": "GetRolesEditablePaging",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "page",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/RoleViewModel"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Account/roles/{page}/{pageSize}": {
      "get": {
        "tags": [
          "Account"
        ],
        "operationId": "GetRoles",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "page",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "onlyEditableRoles",
            "in": "query",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/RoleViewModel"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Account/permissions": {
      "get": {
        "tags": [
          "Account"
        ],
        "operationId": "GetAllPermissions",
        "consumes": [],
        "produces": [],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/PermissionViewModel"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "CreatePermission",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/PermissionViewModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PermissionViewModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Account/permissions/{id}": {
      "put": {
        "tags": [
          "Account"
        ],
        "operationId": "UpdatePermission",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/PermissionViewModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PermissionViewModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Account"
        ],
        "operationId": "DeletePermission",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PermissionViewModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/AccountingInvoice/exportReconcile": {
      "post": {
        "tags": [
          "AccountingInvoice"
        ],
        "operationId": "ExportReconcile",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/AccountingInvoiceQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "file"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/AccountingInvoice/sendInvoice": {
      "post": {
        "tags": [
          "AccountingInvoice"
        ],
        "operationId": "SendInvoice",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/SendInvoiceRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AccountingInvoiceServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/AccountingInvoice/getAccountingInvoices": {
      "post": {
        "tags": [
          "AccountingInvoice"
        ],
        "operationId": "GetAccountingInvoices",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/AccountingInvoiceQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QueryResult[AccountingInvoiceServiceModel]"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/AccountingInvoice/getAccountingInvoice": {
      "get": {
        "tags": [
          "AccountingInvoice"
        ],
        "operationId": "GetAccountingInvoice",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AccountingInvoiceServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/AccountingInvoice/saveAccountingInvoice": {
      "post": {
        "tags": [
          "AccountingInvoice"
        ],
        "operationId": "SaveAccountingInvoice",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/AccountingInvoiceServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AccountingInvoiceServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/AccountingInvoice/deleteAccountingInvoice": {
      "post": {
        "tags": [
          "AccountingInvoice"
        ],
        "operationId": "DeleteAccountingInvoice",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Anchor/document/{referenceId}": {
      "post": {
        "tags": [
          "Anchor"
        ],
        "operationId": "GetDocument",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "referenceId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/AuditTrail/getAuditTrails": {
      "post": {
        "tags": [
          "AuditTrail"
        ],
        "operationId": "GetAuditTrails",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/AuditTrailQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QueryResult[AuditTrailServiceModel]"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/AuditTrail/getAuditTrail": {
      "get": {
        "tags": [
          "AuditTrail"
        ],
        "operationId": "GetAuditTrail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AuditTrailServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/AuditTrail/saveAuditTrail": {
      "post": {
        "tags": [
          "AuditTrail"
        ],
        "operationId": "SaveAuditTrail",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/AuditTrailServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AuditTrailServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/AuditTrail/deleteAuditTrail": {
      "post": {
        "tags": [
          "AuditTrail"
        ],
        "operationId": "DeleteAuditTrail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/sendInvoice": {
      "post": {
        "tags": [
          "BaseAccountingInvoice"
        ],
        "operationId": "SendInvoice",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/SendInvoiceRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AccountingInvoiceServiceModel"
            }
          }
        }
      }
    },
    "/getAccountingInvoices": {
      "post": {
        "tags": [
          "BaseAccountingInvoice"
        ],
        "operationId": "GetAccountingInvoices",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/AccountingInvoiceQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QueryResult[AccountingInvoiceServiceModel]"
            }
          }
        }
      }
    },
    "/getAccountingInvoice": {
      "get": {
        "tags": [
          "BaseAccountingInvoice"
        ],
        "operationId": "GetAccountingInvoice",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AccountingInvoiceServiceModel"
            }
          }
        }
      }
    },
    "/saveAccountingInvoice": {
      "post": {
        "tags": [
          "BaseAccountingInvoice"
        ],
        "operationId": "SaveAccountingInvoice",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/AccountingInvoiceServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AccountingInvoiceServiceModel"
            }
          }
        }
      }
    },
    "/deleteAccountingInvoice": {
      "post": {
        "tags": [
          "BaseAccountingInvoice"
        ],
        "operationId": "DeleteAccountingInvoice",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/getAuditTrails": {
      "post": {
        "tags": [
          "BaseAuditTrail"
        ],
        "operationId": "GetAuditTrails",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/AuditTrailQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QueryResult[AuditTrailServiceModel]"
            }
          }
        }
      }
    },
    "/getAuditTrail": {
      "get": {
        "tags": [
          "BaseAuditTrail"
        ],
        "operationId": "GetAuditTrail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AuditTrailServiceModel"
            }
          }
        }
      }
    },
    "/saveAuditTrail": {
      "post": {
        "tags": [
          "BaseAuditTrail"
        ],
        "operationId": "SaveAuditTrail",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/AuditTrailServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AuditTrailServiceModel"
            }
          }
        }
      }
    },
    "/deleteAuditTrail": {
      "post": {
        "tags": [
          "BaseAuditTrail"
        ],
        "operationId": "DeleteAuditTrail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/getBrokers": {
      "post": {
        "tags": [
          "BaseBroker"
        ],
        "operationId": "GetBrokers",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/BrokerQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QueryResult[BrokerServiceModel]"
            }
          }
        }
      }
    },
    "/getBroker": {
      "get": {
        "tags": [
          "BaseBroker"
        ],
        "operationId": "GetBroker",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BrokerServiceModel"
            }
          }
        }
      }
    },
    "/saveBroker": {
      "post": {
        "tags": [
          "BaseBroker"
        ],
        "operationId": "SaveBroker",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/BrokerServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BrokerServiceModel"
            }
          }
        }
      }
    },
    "/deleteBroker": {
      "post": {
        "tags": [
          "BaseBroker"
        ],
        "operationId": "DeleteBroker",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/getCarriers": {
      "post": {
        "tags": [
          "BaseCarrier"
        ],
        "operationId": "GetCarriers",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CarrierQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QueryResult[CarrierServiceModel]"
            }
          }
        }
      }
    },
    "/getCarrier": {
      "get": {
        "tags": [
          "BaseCarrier"
        ],
        "operationId": "GetCarrier",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CarrierServiceModel"
            }
          }
        }
      }
    },
    "/saveCarrier": {
      "post": {
        "tags": [
          "BaseCarrier"
        ],
        "operationId": "SaveCarrier",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CarrierServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CarrierServiceModel"
            }
          }
        }
      }
    },
    "/deleteCarrier": {
      "post": {
        "tags": [
          "BaseCarrier"
        ],
        "operationId": "DeleteCarrier",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/getCommodityTypes": {
      "post": {
        "tags": [
          "BaseCommodityType"
        ],
        "operationId": "GetCommodityTypes",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CommodityTypeQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QueryResult[CommodityTypeServiceModel]"
            }
          }
        }
      }
    },
    "/getCommodityType": {
      "get": {
        "tags": [
          "BaseCommodityType"
        ],
        "operationId": "GetCommodityType",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CommodityTypeServiceModel"
            }
          }
        }
      }
    },
    "/saveCommodityType": {
      "post": {
        "tags": [
          "BaseCommodityType"
        ],
        "operationId": "SaveCommodityType",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CommodityTypeServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CommodityTypeServiceModel"
            }
          }
        }
      }
    },
    "/deleteCommodityType": {
      "post": {
        "tags": [
          "BaseCommodityType"
        ],
        "operationId": "DeleteCommodityType",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/getCompanies": {
      "post": {
        "tags": [
          "BaseCompany"
        ],
        "operationId": "GetCompanies",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CompanyQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QueryResult[CompanyServiceModel]"
            }
          }
        }
      }
    },
    "/getCompany": {
      "get": {
        "tags": [
          "BaseCompany"
        ],
        "operationId": "GetCompany",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CompanyServiceModel"
            }
          }
        }
      }
    },
    "/saveCompany": {
      "post": {
        "tags": [
          "BaseCompany"
        ],
        "operationId": "SaveCompany",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CompanyServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CompanyServiceModel"
            }
          }
        }
      }
    },
    "/deleteCompany": {
      "post": {
        "tags": [
          "BaseCompany"
        ],
        "operationId": "DeleteCompany",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/getDocuments": {
      "post": {
        "tags": [
          "BaseDocument"
        ],
        "operationId": "GetDocuments",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DocumentQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QueryResult[DocumentServiceModel]"
            }
          }
        }
      }
    },
    "/getDocument": {
      "get": {
        "tags": [
          "BaseDocument"
        ],
        "operationId": "GetDocument",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DocumentServiceModel"
            }
          }
        }
      }
    },
    "/saveDocument": {
      "post": {
        "tags": [
          "BaseDocument"
        ],
        "operationId": "SaveDocument",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DocumentServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DocumentServiceModel"
            }
          }
        }
      }
    },
    "/deleteDocument": {
      "post": {
        "tags": [
          "BaseDocument"
        ],
        "operationId": "DeleteDocument",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/getDrivers": {
      "post": {
        "tags": [
          "BaseDriver"
        ],
        "operationId": "GetDrivers",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DriverQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QueryResult[DriverServiceModel]"
            }
          }
        }
      }
    },
    "/getDriver": {
      "get": {
        "tags": [
          "BaseDriver"
        ],
        "operationId": "GetDriver",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DriverServiceModel"
            }
          }
        }
      }
    },
    "/saveDriver": {
      "post": {
        "tags": [
          "BaseDriver"
        ],
        "operationId": "SaveDriver",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DriverServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DriverServiceModel"
            }
          }
        }
      }
    },
    "/deleteDriver": {
      "post": {
        "tags": [
          "BaseDriver"
        ],
        "operationId": "DeleteDriver",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/getDriverSafety": {
      "get": {
        "tags": [
          "BaseDriverSafety"
        ],
        "operationId": "GetDriverSafety",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DriverSafetyServiceModel"
            }
          }
        }
      }
    },
    "/getEdiConfigs": {
      "post": {
        "tags": [
          "BaseEdiConfig"
        ],
        "operationId": "GetEdiConfigs",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/EdiConfigQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QueryResult[EdiConfigServiceModel]"
            }
          }
        }
      }
    },
    "/getEdiConfig": {
      "get": {
        "tags": [
          "BaseEdiConfig"
        ],
        "operationId": "GetEdiConfig",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EdiConfigServiceModel"
            }
          }
        }
      }
    },
    "/saveEdiConfig": {
      "post": {
        "tags": [
          "BaseEdiConfig"
        ],
        "operationId": "SaveEdiConfig",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/EdiConfigServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EdiConfigServiceModel"
            }
          }
        }
      }
    },
    "/deleteEdiConfig": {
      "post": {
        "tags": [
          "BaseEdiConfig"
        ],
        "operationId": "DeleteEdiConfig",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/getEdiMessageLogs": {
      "post": {
        "tags": [
          "BaseEdiMessageLog"
        ],
        "operationId": "GetEdiMessageLogs",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/EdiMessageLogQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QueryResult[EdiMessageLogServiceModel]"
            }
          }
        }
      }
    },
    "/getEdiMessageLog": {
      "get": {
        "tags": [
          "BaseEdiMessageLog"
        ],
        "operationId": "GetEdiMessageLog",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EdiMessageLogServiceModel"
            }
          }
        }
      }
    },
    "/saveEdiMessageLog": {
      "post": {
        "tags": [
          "BaseEdiMessageLog"
        ],
        "operationId": "SaveEdiMessageLog",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/EdiMessageLogServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EdiMessageLogServiceModel"
            }
          }
        }
      }
    },
    "/deleteEdiMessageLog": {
      "post": {
        "tags": [
          "BaseEdiMessageLog"
        ],
        "operationId": "DeleteEdiMessageLog",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/getEdiTenders": {
      "post": {
        "tags": [
          "BaseEdiTender"
        ],
        "operationId": "GetEdiTenders",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/EdiTenderQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QueryResult[EdiTenderServiceModel]"
            }
          }
        }
      }
    },
    "/getEdiTender": {
      "get": {
        "tags": [
          "BaseEdiTender"
        ],
        "operationId": "GetEdiTender",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EdiTenderServiceModel"
            }
          }
        }
      }
    },
    "/saveEdiTender": {
      "post": {
        "tags": [
          "BaseEdiTender"
        ],
        "operationId": "SaveEdiTender",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/EdiTenderServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EdiTenderServiceModel"
            }
          }
        }
      }
    },
    "/deleteEdiTender": {
      "post": {
        "tags": [
          "BaseEdiTender"
        ],
        "operationId": "DeleteEdiTender",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/getEquipments": {
      "post": {
        "tags": [
          "BaseEquipment"
        ],
        "operationId": "GetEquipments",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/EquipmentQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QueryResult[EquipmentServiceModel]"
            }
          }
        }
      }
    },
    "/getEquipment": {
      "get": {
        "tags": [
          "BaseEquipment"
        ],
        "operationId": "GetEquipment",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EquipmentServiceModel"
            }
          }
        }
      }
    },
    "/saveEquipment": {
      "post": {
        "tags": [
          "BaseEquipment"
        ],
        "operationId": "SaveEquipment",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/EquipmentServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EquipmentServiceModel"
            }
          }
        }
      }
    },
    "/deleteEquipment": {
      "post": {
        "tags": [
          "BaseEquipment"
        ],
        "operationId": "DeleteEquipment",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/getEquipmentLengths": {
      "post": {
        "tags": [
          "BaseEquipmentLength"
        ],
        "operationId": "GetEquipmentLengths",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/EquipmentLengthQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QueryResult[EquipmentLengthServiceModel]"
            }
          }
        }
      }
    },
    "/getEquipmentLength": {
      "get": {
        "tags": [
          "BaseEquipmentLength"
        ],
        "operationId": "GetEquipmentLength",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EquipmentLengthServiceModel"
            }
          }
        }
      }
    },
    "/saveEquipmentLength": {
      "post": {
        "tags": [
          "BaseEquipmentLength"
        ],
        "operationId": "SaveEquipmentLength",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/EquipmentLengthServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EquipmentLengthServiceModel"
            }
          }
        }
      }
    },
    "/deleteEquipmentLength": {
      "post": {
        "tags": [
          "BaseEquipmentLength"
        ],
        "operationId": "DeleteEquipmentLength",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/getEquipmentTypes": {
      "post": {
        "tags": [
          "BaseEquipmentType"
        ],
        "operationId": "GetEquipmentTypes",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/EquipmentTypeQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QueryResult[EquipmentTypeServiceModel]"
            }
          }
        }
      }
    },
    "/getEquipmentType": {
      "get": {
        "tags": [
          "BaseEquipmentType"
        ],
        "operationId": "GetEquipmentType",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EquipmentTypeServiceModel"
            }
          }
        }
      }
    },
    "/saveEquipmentType": {
      "post": {
        "tags": [
          "BaseEquipmentType"
        ],
        "operationId": "SaveEquipmentType",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/EquipmentTypeServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EquipmentTypeServiceModel"
            }
          }
        }
      }
    },
    "/deleteEquipmentType": {
      "post": {
        "tags": [
          "BaseEquipmentType"
        ],
        "operationId": "DeleteEquipmentType",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/getHandlingUnits": {
      "post": {
        "tags": [
          "BaseHandlingUnit"
        ],
        "operationId": "GetHandlingUnits",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/HandlingUnitQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QueryResult[HandlingUnitServiceModel]"
            }
          }
        }
      }
    },
    "/getHandlingUnit": {
      "get": {
        "tags": [
          "BaseHandlingUnit"
        ],
        "operationId": "GetHandlingUnit",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/HandlingUnitServiceModel"
            }
          }
        }
      }
    },
    "/saveHandlingUnit": {
      "post": {
        "tags": [
          "BaseHandlingUnit"
        ],
        "operationId": "SaveHandlingUnit",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/HandlingUnitServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/HandlingUnitServiceModel"
            }
          }
        }
      }
    },
    "/deleteHandlingUnit": {
      "post": {
        "tags": [
          "BaseHandlingUnit"
        ],
        "operationId": "DeleteHandlingUnit",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/getInvitations": {
      "post": {
        "tags": [
          "BaseInvitation"
        ],
        "operationId": "GetInvitations",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Query"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QueryResult[InvitationServiceModel]"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/getInvitation": {
      "get": {
        "tags": [
          "BaseInvitation"
        ],
        "operationId": "GetInvitation",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/InvitationServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/saveInvitation": {
      "post": {
        "tags": [
          "BaseInvitation"
        ],
        "operationId": "SaveInvitation",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/InvitationServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/InvitationServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/deleteInvitation": {
      "post": {
        "tags": [
          "BaseInvitation"
        ],
        "operationId": "DeleteInvitation",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/InvitationServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/getInvoiceItems": {
      "post": {
        "tags": [
          "BaseInvoiceItem"
        ],
        "operationId": "GetInvoiceItems",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/InvoiceItemQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QueryResult[InvoiceItemServiceModel]"
            }
          }
        }
      }
    },
    "/getInvoiceItem": {
      "get": {
        "tags": [
          "BaseInvoiceItem"
        ],
        "operationId": "GetInvoiceItem",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/InvoiceItemServiceModel"
            }
          }
        }
      }
    },
    "/saveInvoiceItem": {
      "post": {
        "tags": [
          "BaseInvoiceItem"
        ],
        "operationId": "SaveInvoiceItem",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/InvoiceItemServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/InvoiceItemServiceModel"
            }
          }
        }
      }
    },
    "/deleteInvoiceItem": {
      "post": {
        "tags": [
          "BaseInvoiceItem"
        ],
        "operationId": "DeleteInvoiceItem",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/getInvoiceItemCategories": {
      "post": {
        "tags": [
          "BaseInvoiceItemCategory"
        ],
        "operationId": "GetInvoiceItemCategories",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/InvoiceItemCategoryQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QueryResult[InvoiceItemCategoryServiceModel]"
            }
          }
        }
      }
    },
    "/getInvoiceItemCategory": {
      "get": {
        "tags": [
          "BaseInvoiceItemCategory"
        ],
        "operationId": "GetInvoiceItemCategory",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/InvoiceItemCategoryServiceModel"
            }
          }
        }
      }
    },
    "/saveInvoiceItemCategory": {
      "post": {
        "tags": [
          "BaseInvoiceItemCategory"
        ],
        "operationId": "SaveInvoiceItemCategory",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/InvoiceItemCategoryServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/InvoiceItemCategoryServiceModel"
            }
          }
        }
      }
    },
    "/deleteInvoiceItemCategory": {
      "post": {
        "tags": [
          "BaseInvoiceItemCategory"
        ],
        "operationId": "DeleteInvoiceItemCategory",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/getInvoiceParticipants": {
      "post": {
        "tags": [
          "BaseInvoiceParticipant"
        ],
        "operationId": "GetInvoiceParticipants",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/InvoiceParticipantQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QueryResult[InvoiceParticipantServiceModel]"
            }
          }
        }
      }
    },
    "/getInvoiceParticipant": {
      "get": {
        "tags": [
          "BaseInvoiceParticipant"
        ],
        "operationId": "GetInvoiceParticipant",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/InvoiceParticipantServiceModel"
            }
          }
        }
      }
    },
    "/saveInvoiceParticipant": {
      "post": {
        "tags": [
          "BaseInvoiceParticipant"
        ],
        "operationId": "SaveInvoiceParticipant",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/InvoiceParticipantServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/InvoiceParticipantServiceModel"
            }
          }
        }
      }
    },
    "/deleteInvoiceParticipant": {
      "post": {
        "tags": [
          "BaseInvoiceParticipant"
        ],
        "operationId": "DeleteInvoiceParticipant",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/getLadingItems": {
      "post": {
        "tags": [
          "BaseLadingItem"
        ],
        "operationId": "GetLadingItems",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/LadingItemQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QueryResult[LadingItemServiceModel]"
            }
          }
        }
      }
    },
    "/getLadingItem": {
      "get": {
        "tags": [
          "BaseLadingItem"
        ],
        "operationId": "GetLadingItem",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/LadingItemServiceModel"
            }
          }
        }
      }
    },
    "/saveLadingItem": {
      "post": {
        "tags": [
          "BaseLadingItem"
        ],
        "operationId": "SaveLadingItem",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/LadingItemServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/LadingItemServiceModel"
            }
          }
        }
      }
    },
    "/deleteLadingItem": {
      "post": {
        "tags": [
          "BaseLadingItem"
        ],
        "operationId": "DeleteLadingItem",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/getLineItemTypes": {
      "post": {
        "tags": [
          "BaseLineItemType"
        ],
        "operationId": "GetLineItemTypes",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/LineItemTypeQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QueryResult[LineItemTypeServiceModel]"
            }
          }
        }
      }
    },
    "/getLineItemType": {
      "get": {
        "tags": [
          "BaseLineItemType"
        ],
        "operationId": "GetLineItemType",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/LineItemTypeServiceModel"
            }
          }
        }
      }
    },
    "/saveLineItemType": {
      "post": {
        "tags": [
          "BaseLineItemType"
        ],
        "operationId": "SaveLineItemType",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/LineItemTypeServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/LineItemTypeServiceModel"
            }
          }
        }
      }
    },
    "/deleteLineItemType": {
      "post": {
        "tags": [
          "BaseLineItemType"
        ],
        "operationId": "DeleteLineItemType",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/getLoadSizes": {
      "post": {
        "tags": [
          "BaseLoadSize"
        ],
        "operationId": "GetLoadSizes",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/LoadSizeQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QueryResult[LoadSizeServiceModel]"
            }
          }
        }
      }
    },
    "/getLoadSize": {
      "get": {
        "tags": [
          "BaseLoadSize"
        ],
        "operationId": "GetLoadSize",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/LoadSizeServiceModel"
            }
          }
        }
      }
    },
    "/saveLoadSize": {
      "post": {
        "tags": [
          "BaseLoadSize"
        ],
        "operationId": "SaveLoadSize",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/LoadSizeServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/LoadSizeServiceModel"
            }
          }
        }
      }
    },
    "/deleteLoadSize": {
      "post": {
        "tags": [
          "BaseLoadSize"
        ],
        "operationId": "DeleteLoadSize",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/getNmfcClasses": {
      "post": {
        "tags": [
          "BaseNmfcClass"
        ],
        "operationId": "GetNmfcClasses",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/NmfcClassQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QueryResult[NmfcClassServiceModel]"
            }
          }
        }
      }
    },
    "/getNmfcClass": {
      "get": {
        "tags": [
          "BaseNmfcClass"
        ],
        "operationId": "GetNmfcClass",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/NmfcClassServiceModel"
            }
          }
        }
      }
    },
    "/saveNmfcClass": {
      "post": {
        "tags": [
          "BaseNmfcClass"
        ],
        "operationId": "SaveNmfcClass",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/NmfcClassServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/NmfcClassServiceModel"
            }
          }
        }
      }
    },
    "/deleteNmfcClass": {
      "post": {
        "tags": [
          "BaseNmfcClass"
        ],
        "operationId": "DeleteNmfcClass",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/getNmfcNumbers": {
      "post": {
        "tags": [
          "BaseNmfcNumber"
        ],
        "operationId": "GetNmfcNumbers",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/NmfcNumberQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QueryResult[NmfcNumberServiceModel]"
            }
          }
        }
      }
    },
    "/getNmfcNumber": {
      "get": {
        "tags": [
          "BaseNmfcNumber"
        ],
        "operationId": "GetNmfcNumber",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/NmfcNumberServiceModel"
            }
          }
        }
      }
    },
    "/saveNmfcNumber": {
      "post": {
        "tags": [
          "BaseNmfcNumber"
        ],
        "operationId": "SaveNmfcNumber",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/NmfcNumberServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/NmfcNumberServiceModel"
            }
          }
        }
      }
    },
    "/deleteNmfcNumber": {
      "post": {
        "tags": [
          "BaseNmfcNumber"
        ],
        "operationId": "DeleteNmfcNumber",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/getOrderItems": {
      "post": {
        "tags": [
          "BaseOrderItem"
        ],
        "operationId": "GetOrderItems",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/OrderItemQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QueryResult[OrderItemServiceModel]"
            }
          }
        }
      }
    },
    "/getOrderItem": {
      "get": {
        "tags": [
          "BaseOrderItem"
        ],
        "operationId": "GetOrderItem",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OrderItemServiceModel"
            }
          }
        }
      }
    },
    "/saveOrderItem": {
      "post": {
        "tags": [
          "BaseOrderItem"
        ],
        "operationId": "SaveOrderItem",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/OrderItemServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OrderItemServiceModel"
            }
          }
        }
      }
    },
    "/deleteOrderItem": {
      "post": {
        "tags": [
          "BaseOrderItem"
        ],
        "operationId": "DeleteOrderItem",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/getOrderItemReferenceNumberTypes": {
      "post": {
        "tags": [
          "BaseOrderItemReferenceNumberType"
        ],
        "operationId": "GetOrderItemReferenceNumberTypes",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/OrderItemReferenceNumberTypeQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QueryResult[OrderItemReferenceNumberTypeServiceModel]"
            }
          }
        }
      }
    },
    "/getOrderItemReferenceNumberType": {
      "get": {
        "tags": [
          "BaseOrderItemReferenceNumberType"
        ],
        "operationId": "GetOrderItemReferenceNumberType",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OrderItemReferenceNumberTypeServiceModel"
            }
          }
        }
      }
    },
    "/saveOrderItemReferenceNumberType": {
      "post": {
        "tags": [
          "BaseOrderItemReferenceNumberType"
        ],
        "operationId": "SaveOrderItemReferenceNumberType",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/OrderItemReferenceNumberTypeServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OrderItemReferenceNumberTypeServiceModel"
            }
          }
        }
      }
    },
    "/deleteOrderItemReferenceNumberType": {
      "post": {
        "tags": [
          "BaseOrderItemReferenceNumberType"
        ],
        "operationId": "DeleteOrderItemReferenceNumberType",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/getPackageTypes": {
      "post": {
        "tags": [
          "BasePackageType"
        ],
        "operationId": "GetPackageTypes",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/PackageTypeQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QueryResult[PackageTypeServiceModel]"
            }
          }
        }
      }
    },
    "/getPackageType": {
      "get": {
        "tags": [
          "BasePackageType"
        ],
        "operationId": "GetPackageType",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PackageTypeServiceModel"
            }
          }
        }
      }
    },
    "/savePackageType": {
      "post": {
        "tags": [
          "BasePackageType"
        ],
        "operationId": "SavePackageType",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/PackageTypeServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PackageTypeServiceModel"
            }
          }
        }
      }
    },
    "/deletePackageType": {
      "post": {
        "tags": [
          "BasePackageType"
        ],
        "operationId": "DeletePackageType",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/getPermissions": {
      "post": {
        "tags": [
          "BasePermission"
        ],
        "operationId": "GetPermissions",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/PermissionQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QueryResult[PermissionServiceModel]"
            }
          }
        }
      }
    },
    "/getPermission": {
      "get": {
        "tags": [
          "BasePermission"
        ],
        "operationId": "GetPermission",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PermissionServiceModel"
            }
          }
        }
      }
    },
    "/savePermission": {
      "post": {
        "tags": [
          "BasePermission"
        ],
        "operationId": "SavePermission",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/PermissionServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PermissionServiceModel"
            }
          }
        }
      }
    },
    "/deletePermission": {
      "post": {
        "tags": [
          "BasePermission"
        ],
        "operationId": "DeletePermission",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/addUser": {
      "post": {
        "tags": [
          "BaseRole"
        ],
        "operationId": "AddUser",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/AddUserRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RoleServiceModel"
            }
          }
        }
      }
    },
    "/addPermission": {
      "post": {
        "tags": [
          "BaseRole"
        ],
        "operationId": "AddPermission",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/AddPermissionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RoleServiceModel"
            }
          }
        }
      }
    },
    "/getRoles": {
      "post": {
        "tags": [
          "BaseRole"
        ],
        "operationId": "GetRoles",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/RoleQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QueryResult[RoleServiceModel]"
            }
          }
        }
      }
    },
    "/getRole": {
      "get": {
        "tags": [
          "BaseRole"
        ],
        "operationId": "GetRole",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RoleServiceModel"
            }
          }
        }
      }
    },
    "/saveRole": {
      "post": {
        "tags": [
          "BaseRole"
        ],
        "operationId": "SaveRole",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/RoleServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RoleServiceModel"
            }
          }
        }
      }
    },
    "/deleteRole": {
      "post": {
        "tags": [
          "BaseRole"
        ],
        "operationId": "DeleteRole",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/getRoleClaims": {
      "post": {
        "tags": [
          "BaseRoleClaim"
        ],
        "operationId": "GetRoleClaims",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/RoleClaimQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QueryResult[RoleClaimServiceModel]"
            }
          }
        }
      }
    },
    "/getRoleClaim": {
      "get": {
        "tags": [
          "BaseRoleClaim"
        ],
        "operationId": "GetRoleClaim",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RoleClaimServiceModel"
            }
          }
        }
      }
    },
    "/saveRoleClaim": {
      "post": {
        "tags": [
          "BaseRoleClaim"
        ],
        "operationId": "SaveRoleClaim",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/RoleClaimServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RoleClaimServiceModel"
            }
          }
        }
      }
    },
    "/deleteRoleClaim": {
      "post": {
        "tags": [
          "BaseRoleClaim"
        ],
        "operationId": "DeleteRoleClaim",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/getSaferCarriers": {
      "post": {
        "tags": [
          "BaseSaferCarrier"
        ],
        "operationId": "GetSaferCarriers",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/SaferCarrierQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QueryResult[SaferCarrierServiceModel]"
            }
          }
        }
      }
    },
    "/getSaferCarrier": {
      "get": {
        "tags": [
          "BaseSaferCarrier"
        ],
        "operationId": "GetSaferCarrier",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SaferCarrierServiceModel"
            }
          }
        }
      }
    },
    "/saveSaferCarrier": {
      "post": {
        "tags": [
          "BaseSaferCarrier"
        ],
        "operationId": "SaveSaferCarrier",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/SaferCarrierServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SaferCarrierServiceModel"
            }
          }
        }
      }
    },
    "/deleteSaferCarrier": {
      "post": {
        "tags": [
          "BaseSaferCarrier"
        ],
        "operationId": "DeleteSaferCarrier",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/getSamsaraConfig": {
      "get": {
        "tags": [
          "BaseSamsaraConfig"
        ],
        "operationId": "GetSamsaraConfig",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SamsaraConfigServiceModel"
            }
          }
        }
      }
    },
    "/saveSamsaraConfig": {
      "post": {
        "tags": [
          "BaseSamsaraConfig"
        ],
        "operationId": "SaveSamsaraConfig",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/SamsaraConfigServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SamsaraConfigServiceModel"
            }
          }
        }
      }
    },
    "/acceptShipment": {
      "post": {
        "tags": [
          "BaseShipment"
        ],
        "operationId": "AcceptShipment",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/AcceptShipmentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ShipmentServiceModel"
            }
          }
        }
      }
    },
    "/begin": {
      "post": {
        "tags": [
          "BaseShipment"
        ],
        "operationId": "Begin",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/BeginRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ShipmentServiceModel"
            }
          }
        }
      }
    },
    "/complete": {
      "post": {
        "tags": [
          "BaseShipment"
        ],
        "operationId": "Complete",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CompleteRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ShipmentServiceModel"
            }
          }
        }
      }
    },
    "/refreshPartners": {
      "post": {
        "tags": [
          "BaseShipment"
        ],
        "operationId": "RefreshPartners",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/RefreshPartnersRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ShipmentServiceModel"
            }
          }
        }
      }
    },
    "/shipmentDecline": {
      "post": {
        "tags": [
          "BaseShipment"
        ],
        "operationId": "ShipmentDecline",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ShipmentDeclineRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ShipmentServiceModel"
            }
          }
        }
      }
    },
    "/shipmentCancel": {
      "post": {
        "tags": [
          "BaseShipment"
        ],
        "operationId": "ShipmentCancel",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ShipmentCancelRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ShipmentServiceModel"
            }
          }
        }
      }
    },
    "/trackingSettings": {
      "post": {
        "tags": [
          "BaseShipment"
        ],
        "operationId": "TrackingSettings",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/TrackingSettingsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ShipmentServiceModel"
            }
          }
        }
      }
    },
    "/getShipments": {
      "post": {
        "tags": [
          "BaseShipment"
        ],
        "operationId": "GetShipments",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ShipmentQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QueryResult[ShipmentServiceModel]"
            }
          }
        }
      }
    },
    "/getShipment": {
      "get": {
        "tags": [
          "BaseShipment"
        ],
        "operationId": "GetShipment",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ShipmentServiceModel"
            }
          }
        }
      }
    },
    "/saveShipment": {
      "post": {
        "tags": [
          "BaseShipment"
        ],
        "operationId": "SaveShipment",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ShipmentServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ShipmentServiceModel"
            }
          }
        }
      }
    },
    "/deleteShipment": {
      "post": {
        "tags": [
          "BaseShipment"
        ],
        "operationId": "DeleteShipment",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/getShipmentAppointmentStatusCodes": {
      "post": {
        "tags": [
          "BaseShipmentAppointmentStatusCode"
        ],
        "operationId": "GetShipmentAppointmentStatusCodes",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ShipmentAppointmentStatusCodeQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QueryResult[ShipmentAppointmentStatusCodeServiceModel]"
            }
          }
        }
      }
    },
    "/getShipmentAppointmentStatusCode": {
      "get": {
        "tags": [
          "BaseShipmentAppointmentStatusCode"
        ],
        "operationId": "GetShipmentAppointmentStatusCode",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ShipmentAppointmentStatusCodeServiceModel"
            }
          }
        }
      }
    },
    "/saveShipmentAppointmentStatusCode": {
      "post": {
        "tags": [
          "BaseShipmentAppointmentStatusCode"
        ],
        "operationId": "SaveShipmentAppointmentStatusCode",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ShipmentAppointmentStatusCodeServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ShipmentAppointmentStatusCodeServiceModel"
            }
          }
        }
      }
    },
    "/deleteShipmentAppointmentStatusCode": {
      "post": {
        "tags": [
          "BaseShipmentAppointmentStatusCode"
        ],
        "operationId": "DeleteShipmentAppointmentStatusCode",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/getShipmentConfig": {
      "get": {
        "tags": [
          "BaseShipmentConfig"
        ],
        "operationId": "GetShipmentConfig",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ShipmentConfigServiceModel"
            }
          }
        }
      }
    },
    "/saveShipmentConfig": {
      "post": {
        "tags": [
          "BaseShipmentConfig"
        ],
        "operationId": "SaveShipmentConfig",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ShipmentConfigServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ShipmentConfigServiceModel"
            }
          }
        }
      }
    },
    "/getShipmentDeclineReasonCodes": {
      "post": {
        "tags": [
          "BaseShipmentDeclineReasonCode"
        ],
        "operationId": "GetShipmentDeclineReasonCodes",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ShipmentDeclineReasonCodeQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QueryResult[ShipmentDeclineReasonCodeServiceModel]"
            }
          }
        }
      }
    },
    "/getShipmentDeclineReasonCode": {
      "get": {
        "tags": [
          "BaseShipmentDeclineReasonCode"
        ],
        "operationId": "GetShipmentDeclineReasonCode",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ShipmentDeclineReasonCodeServiceModel"
            }
          }
        }
      }
    },
    "/saveShipmentDeclineReasonCode": {
      "post": {
        "tags": [
          "BaseShipmentDeclineReasonCode"
        ],
        "operationId": "SaveShipmentDeclineReasonCode",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ShipmentDeclineReasonCodeServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ShipmentDeclineReasonCodeServiceModel"
            }
          }
        }
      }
    },
    "/deleteShipmentDeclineReasonCode": {
      "post": {
        "tags": [
          "BaseShipmentDeclineReasonCode"
        ],
        "operationId": "DeleteShipmentDeclineReasonCode",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/getShipmentDriverDispatches": {
      "post": {
        "tags": [
          "BaseShipmentDriverDispatch"
        ],
        "operationId": "GetShipmentDriverDispatches",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ShipmentDriverDispatchQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QueryResult[ShipmentDriverDispatchServiceModel]"
            }
          }
        }
      }
    },
    "/getShipmentStatusCodes": {
      "post": {
        "tags": [
          "BaseShipmentStatusCode"
        ],
        "operationId": "GetShipmentStatusCodes",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ShipmentStatusCodeQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QueryResult[ShipmentStatusCodeServiceModel]"
            }
          }
        }
      }
    },
    "/getShipmentStatusCode": {
      "get": {
        "tags": [
          "BaseShipmentStatusCode"
        ],
        "operationId": "GetShipmentStatusCode",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ShipmentStatusCodeServiceModel"
            }
          }
        }
      }
    },
    "/saveShipmentStatusCode": {
      "post": {
        "tags": [
          "BaseShipmentStatusCode"
        ],
        "operationId": "SaveShipmentStatusCode",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ShipmentStatusCodeServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ShipmentStatusCodeServiceModel"
            }
          }
        }
      }
    },
    "/deleteShipmentStatusCode": {
      "post": {
        "tags": [
          "BaseShipmentStatusCode"
        ],
        "operationId": "DeleteShipmentStatusCode",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/getShipmentStatusUpdateTypes": {
      "post": {
        "tags": [
          "BaseShipmentStatusUpdateType"
        ],
        "operationId": "GetShipmentStatusUpdateTypes",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ShipmentStatusUpdateTypeQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QueryResult[ShipmentStatusUpdateTypeServiceModel]"
            }
          }
        }
      }
    },
    "/getShipmentStatusUpdateType": {
      "get": {
        "tags": [
          "BaseShipmentStatusUpdateType"
        ],
        "operationId": "GetShipmentStatusUpdateType",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ShipmentStatusUpdateTypeServiceModel"
            }
          }
        }
      }
    },
    "/saveShipmentStatusUpdateType": {
      "post": {
        "tags": [
          "BaseShipmentStatusUpdateType"
        ],
        "operationId": "SaveShipmentStatusUpdateType",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ShipmentStatusUpdateTypeServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ShipmentStatusUpdateTypeServiceModel"
            }
          }
        }
      }
    },
    "/deleteShipmentStatusUpdateType": {
      "post": {
        "tags": [
          "BaseShipmentStatusUpdateType"
        ],
        "operationId": "DeleteShipmentStatusUpdateType",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/sendTender": {
      "post": {
        "tags": [
          "BaseShipmentTradingPartner"
        ],
        "operationId": "SendTender",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/SendTenderRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ShipmentTradingPartnerServiceModel"
            }
          }
        }
      }
    },
    "/getShipmentTradingPartners": {
      "post": {
        "tags": [
          "BaseShipmentTradingPartner"
        ],
        "operationId": "GetShipmentTradingPartners",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ShipmentTradingPartnerQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QueryResult[ShipmentTradingPartnerServiceModel]"
            }
          }
        }
      }
    },
    "/getShipmentTradingPartner": {
      "get": {
        "tags": [
          "BaseShipmentTradingPartner"
        ],
        "operationId": "GetShipmentTradingPartner",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ShipmentTradingPartnerServiceModel"
            }
          }
        }
      }
    },
    "/saveShipmentTradingPartner": {
      "post": {
        "tags": [
          "BaseShipmentTradingPartner"
        ],
        "operationId": "SaveShipmentTradingPartner",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ShipmentTradingPartnerServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ShipmentTradingPartnerServiceModel"
            }
          }
        }
      }
    },
    "/deleteShipmentTradingPartner": {
      "post": {
        "tags": [
          "BaseShipmentTradingPartner"
        ],
        "operationId": "DeleteShipmentTradingPartner",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/getShippers": {
      "post": {
        "tags": [
          "BaseShipper"
        ],
        "operationId": "GetShippers",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ShipperQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QueryResult[ShipperServiceModel]"
            }
          }
        }
      }
    },
    "/getShipper": {
      "get": {
        "tags": [
          "BaseShipper"
        ],
        "operationId": "GetShipper",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ShipperServiceModel"
            }
          }
        }
      }
    },
    "/saveShipper": {
      "post": {
        "tags": [
          "BaseShipper"
        ],
        "operationId": "SaveShipper",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ShipperServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ShipperServiceModel"
            }
          }
        }
      }
    },
    "/deleteShipper": {
      "post": {
        "tags": [
          "BaseShipper"
        ],
        "operationId": "DeleteShipper",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/stopStatusUpdate": {
      "post": {
        "tags": [
          "BaseStop"
        ],
        "operationId": "StopStatusUpdate",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/StopStatusUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StopServiceModel"
            }
          }
        }
      }
    },
    "/getStops": {
      "post": {
        "tags": [
          "BaseStop"
        ],
        "operationId": "GetStops",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/StopQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QueryResult[StopServiceModel]"
            }
          }
        }
      }
    },
    "/getStop": {
      "get": {
        "tags": [
          "BaseStop"
        ],
        "operationId": "GetStop",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StopServiceModel"
            }
          }
        }
      }
    },
    "/saveStop": {
      "post": {
        "tags": [
          "BaseStop"
        ],
        "operationId": "SaveStop",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/StopServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StopServiceModel"
            }
          }
        }
      }
    },
    "/deleteStop": {
      "post": {
        "tags": [
          "BaseStop"
        ],
        "operationId": "DeleteStop",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/getStopEquipmentItems": {
      "post": {
        "tags": [
          "BaseStopEquipmentItem"
        ],
        "operationId": "GetStopEquipmentItems",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/StopEquipmentItemQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QueryResult[StopEquipmentItemServiceModel]"
            }
          }
        }
      }
    },
    "/getStopEquipmentItem": {
      "get": {
        "tags": [
          "BaseStopEquipmentItem"
        ],
        "operationId": "GetStopEquipmentItem",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StopEquipmentItemServiceModel"
            }
          }
        }
      }
    },
    "/saveStopEquipmentItem": {
      "post": {
        "tags": [
          "BaseStopEquipmentItem"
        ],
        "operationId": "SaveStopEquipmentItem",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/StopEquipmentItemServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StopEquipmentItemServiceModel"
            }
          }
        }
      }
    },
    "/deleteStopEquipmentItem": {
      "post": {
        "tags": [
          "BaseStopEquipmentItem"
        ],
        "operationId": "DeleteStopEquipmentItem",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/getStopUpdates": {
      "post": {
        "tags": [
          "BaseStopUpdate"
        ],
        "operationId": "GetStopUpdates",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/StopUpdateQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QueryResult[StopUpdateServiceModel]"
            }
          }
        }
      }
    },
    "/getStopUpdate": {
      "get": {
        "tags": [
          "BaseStopUpdate"
        ],
        "operationId": "GetStopUpdate",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StopUpdateServiceModel"
            }
          }
        }
      }
    },
    "/saveStopUpdate": {
      "post": {
        "tags": [
          "BaseStopUpdate"
        ],
        "operationId": "SaveStopUpdate",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/StopUpdateServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StopUpdateServiceModel"
            }
          }
        }
      }
    },
    "/deleteStopUpdate": {
      "post": {
        "tags": [
          "BaseStopUpdate"
        ],
        "operationId": "DeleteStopUpdate",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/getTenders": {
      "post": {
        "tags": [
          "BaseTender"
        ],
        "operationId": "GetTenders",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/TenderQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QueryResult[TenderServiceModel]"
            }
          }
        }
      }
    },
    "/getTender": {
      "get": {
        "tags": [
          "BaseTender"
        ],
        "operationId": "GetTender",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TenderServiceModel"
            }
          }
        }
      }
    },
    "/saveTender": {
      "post": {
        "tags": [
          "BaseTender"
        ],
        "operationId": "SaveTender",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/TenderServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TenderServiceModel"
            }
          }
        }
      }
    },
    "/deleteTender": {
      "post": {
        "tags": [
          "BaseTender"
        ],
        "operationId": "DeleteTender",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/generateKeys": {
      "post": {
        "tags": [
          "BaseTradingChannel"
        ],
        "operationId": "GenerateKeys",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/GenerateKeysRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradingChannelServiceModel"
            }
          }
        }
      }
    },
    "/inviteNewPartner": {
      "post": {
        "tags": [
          "BaseTradingChannel"
        ],
        "operationId": "InviteNewPartner",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/InviteNewPartnerRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradingChannelServiceModel"
            }
          }
        }
      }
    },
    "/getTradingChannels": {
      "post": {
        "tags": [
          "BaseTradingChannel"
        ],
        "operationId": "GetTradingChannels",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/TradingChannelQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QueryResult[TradingChannelServiceModel]"
            }
          }
        }
      }
    },
    "/getTradingChannel": {
      "get": {
        "tags": [
          "BaseTradingChannel"
        ],
        "operationId": "GetTradingChannel",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradingChannelServiceModel"
            }
          }
        }
      }
    },
    "/saveTradingChannel": {
      "post": {
        "tags": [
          "BaseTradingChannel"
        ],
        "operationId": "SaveTradingChannel",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/TradingChannelServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradingChannelServiceModel"
            }
          }
        }
      }
    },
    "/deleteTradingChannel": {
      "post": {
        "tags": [
          "BaseTradingChannel"
        ],
        "operationId": "DeleteTradingChannel",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/sendTestMessage": {
      "post": {
        "tags": [
          "BaseTradingPartner"
        ],
        "operationId": "SendTestMessage",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/SendTestMessageRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradingPartnerServiceModel"
            }
          }
        }
      }
    },
    "/getTradingPartners": {
      "post": {
        "tags": [
          "BaseTradingPartner"
        ],
        "operationId": "GetTradingPartners",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/TradingPartnerQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QueryResult[TradingPartnerServiceModel]"
            }
          }
        }
      }
    },
    "/getTradingPartner": {
      "get": {
        "tags": [
          "BaseTradingPartner"
        ],
        "operationId": "GetTradingPartner",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradingPartnerServiceModel"
            }
          }
        }
      }
    },
    "/saveTradingPartner": {
      "post": {
        "tags": [
          "BaseTradingPartner"
        ],
        "operationId": "SaveTradingPartner",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/TradingPartnerServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradingPartnerServiceModel"
            }
          }
        }
      }
    },
    "/deleteTradingPartner": {
      "post": {
        "tags": [
          "BaseTradingPartner"
        ],
        "operationId": "DeleteTradingPartner",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/acceptPartnerInvitation": {
      "post": {
        "tags": [
          "BaseTradingPartnerInvitation"
        ],
        "operationId": "AcceptPartnerInvitation",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/AcceptPartnerInvitationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradingPartnerInvitationServiceModel"
            }
          }
        }
      }
    },
    "/getTradingPartnerInvitations": {
      "post": {
        "tags": [
          "BaseTradingPartnerInvitation"
        ],
        "operationId": "GetTradingPartnerInvitations",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/TradingPartnerInvitationQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QueryResult[TradingPartnerInvitationServiceModel]"
            }
          }
        }
      }
    },
    "/getTradingPartnerInvitation": {
      "get": {
        "tags": [
          "BaseTradingPartnerInvitation"
        ],
        "operationId": "GetTradingPartnerInvitation",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradingPartnerInvitationServiceModel"
            }
          }
        }
      }
    },
    "/saveTradingPartnerInvitation": {
      "post": {
        "tags": [
          "BaseTradingPartnerInvitation"
        ],
        "operationId": "SaveTradingPartnerInvitation",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/TradingPartnerInvitationServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradingPartnerInvitationServiceModel"
            }
          }
        }
      }
    },
    "/deleteTradingPartnerInvitation": {
      "post": {
        "tags": [
          "BaseTradingPartnerInvitation"
        ],
        "operationId": "DeleteTradingPartnerInvitation",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/getTradingPartnerMessages": {
      "post": {
        "tags": [
          "BaseTradingPartnerMessage"
        ],
        "operationId": "GetTradingPartnerMessages",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/TradingPartnerMessageQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QueryResult[TradingPartnerMessageServiceModel]"
            }
          }
        }
      }
    },
    "/getTradingPartnerMessage": {
      "get": {
        "tags": [
          "BaseTradingPartnerMessage"
        ],
        "operationId": "GetTradingPartnerMessage",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradingPartnerMessageServiceModel"
            }
          }
        }
      }
    },
    "/saveTradingPartnerMessage": {
      "post": {
        "tags": [
          "BaseTradingPartnerMessage"
        ],
        "operationId": "SaveTradingPartnerMessage",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/TradingPartnerMessageServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradingPartnerMessageServiceModel"
            }
          }
        }
      }
    },
    "/deleteTradingPartnerMessage": {
      "post": {
        "tags": [
          "BaseTradingPartnerMessage"
        ],
        "operationId": "DeleteTradingPartnerMessage",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/getTrailers": {
      "post": {
        "tags": [
          "BaseTrailer"
        ],
        "operationId": "GetTrailers",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/TrailerQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QueryResult[TrailerServiceModel]"
            }
          }
        }
      }
    },
    "/getTrailer": {
      "get": {
        "tags": [
          "BaseTrailer"
        ],
        "operationId": "GetTrailer",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TrailerServiceModel"
            }
          }
        }
      }
    },
    "/saveTrailer": {
      "post": {
        "tags": [
          "BaseTrailer"
        ],
        "operationId": "SaveTrailer",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/TrailerServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TrailerServiceModel"
            }
          }
        }
      }
    },
    "/deleteTrailer": {
      "post": {
        "tags": [
          "BaseTrailer"
        ],
        "operationId": "DeleteTrailer",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/getUsers": {
      "post": {
        "tags": [
          "BaseUser"
        ],
        "operationId": "GetUsers",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UserQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QueryResult[UserServiceModel]"
            }
          }
        }
      }
    },
    "/getUser": {
      "get": {
        "tags": [
          "BaseUser"
        ],
        "operationId": "GetUser",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UserServiceModel"
            }
          }
        }
      }
    },
    "/saveUser": {
      "post": {
        "tags": [
          "BaseUser"
        ],
        "operationId": "SaveUser",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UserServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UserServiceModel"
            }
          }
        }
      }
    },
    "/deleteUser": {
      "post": {
        "tags": [
          "BaseUser"
        ],
        "operationId": "DeleteUser",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/getVehicles": {
      "post": {
        "tags": [
          "BaseVehicle"
        ],
        "operationId": "GetVehicles",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/VehicleQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QueryResult[VehicleServiceModel]"
            }
          }
        }
      }
    },
    "/getVehicle": {
      "get": {
        "tags": [
          "BaseVehicle"
        ],
        "operationId": "GetVehicle",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/VehicleServiceModel"
            }
          }
        }
      }
    },
    "/saveVehicle": {
      "post": {
        "tags": [
          "BaseVehicle"
        ],
        "operationId": "SaveVehicle",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/VehicleServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/VehicleServiceModel"
            }
          }
        }
      }
    },
    "/deleteVehicle": {
      "post": {
        "tags": [
          "BaseVehicle"
        ],
        "operationId": "DeleteVehicle",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Broker/getBrokers": {
      "post": {
        "tags": [
          "Broker"
        ],
        "operationId": "GetBrokers",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/BrokerQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QueryResult[BrokerServiceModel]"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Broker/getBroker": {
      "get": {
        "tags": [
          "Broker"
        ],
        "operationId": "GetBroker",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BrokerServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Broker/saveBroker": {
      "post": {
        "tags": [
          "Broker"
        ],
        "operationId": "SaveBroker",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/BrokerServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BrokerServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Broker/deleteBroker": {
      "post": {
        "tags": [
          "Broker"
        ],
        "operationId": "DeleteBroker",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Carrier/getCarriers": {
      "post": {
        "tags": [
          "Carrier"
        ],
        "operationId": "GetCarriers",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CarrierQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QueryResult[CarrierServiceModel]"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Carrier/getCarrier": {
      "get": {
        "tags": [
          "Carrier"
        ],
        "operationId": "GetCarrier",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CarrierServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Carrier/saveCarrier": {
      "post": {
        "tags": [
          "Carrier"
        ],
        "operationId": "SaveCarrier",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CarrierServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CarrierServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Carrier/deleteCarrier": {
      "post": {
        "tags": [
          "Carrier"
        ],
        "operationId": "DeleteCarrier",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/CarrierQuoteRequest/sendQuote": {
      "post": {
        "tags": [
          "CarrierQuoteRequest"
        ],
        "operationId": "SendQuote",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CarrierApproveLoadRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ShipmentServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/CarrierQuoteRequest/sendCounterOffer": {
      "post": {
        "tags": [
          "CarrierQuoteRequest"
        ],
        "operationId": "SendCounterOffer",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CarrierCounterOfferLoadRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ShipmentServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/CarrierQuoteRequest/saveAdditionalInformation": {
      "post": {
        "tags": [
          "CarrierQuoteRequest"
        ],
        "operationId": "SaveAdditionalInformation",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "carrierQuoteRequestId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CarrierAdditionalInfoServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CarrierQuoteRequestServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/CarrierQuoteRequest/getPickupAppointment": {
      "get": {
        "tags": [
          "CarrierQuoteRequest"
        ],
        "operationId": "GetPickupAppointment",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "carrierQuoteRequestId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PickupAppointmentServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/CarrierQuoteRequest/savePickupAppointment": {
      "post": {
        "tags": [
          "CarrierQuoteRequest"
        ],
        "operationId": "SavePickupAppointment",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "carrierQuoteRequestId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/PickupAppointmentServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PickupAppointmentServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/CarrierQuoteRequest/getCarrierquoterequests": {
      "post": {
        "tags": [
          "CarrierQuoteRequest"
        ],
        "operationId": "GetCarrierquoterequests",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Query"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QueryResult[CarrierQuoteRequestServiceModel]"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/CarrierQuoteRequest/getCarrierQuoteRequest": {
      "get": {
        "tags": [
          "CarrierQuoteRequest"
        ],
        "operationId": "GetCarrierQuoteRequest",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CarrierQuoteRequestServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/CarrierQuoteRequest/saveCarrierQuoteRequest": {
      "post": {
        "tags": [
          "CarrierQuoteRequest"
        ],
        "operationId": "SaveCarrierQuoteRequest",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CarrierQuoteRequestServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CarrierQuoteRequestServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/CarrierQuoteRequest/deleteCarrierQuoteRequest": {
      "post": {
        "tags": [
          "CarrierQuoteRequest"
        ],
        "operationId": "DeleteCarrierQuoteRequest",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CarrierQuoteRequestServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/CommodityType/getCommodityTypes": {
      "post": {
        "tags": [
          "CommodityType"
        ],
        "operationId": "GetCommodityTypes",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CommodityTypeQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QueryResult[CommodityTypeServiceModel]"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/CommodityType/getCommodityType": {
      "get": {
        "tags": [
          "CommodityType"
        ],
        "operationId": "GetCommodityType",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CommodityTypeServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/CommodityType/saveCommodityType": {
      "post": {
        "tags": [
          "CommodityType"
        ],
        "operationId": "SaveCommodityType",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CommodityTypeServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CommodityTypeServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/CommodityType/deleteCommodityType": {
      "post": {
        "tags": [
          "CommodityType"
        ],
        "operationId": "DeleteCommodityType",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Company/getCompanies": {
      "post": {
        "tags": [
          "Company"
        ],
        "operationId": "GetCompanies",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CompanyQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QueryResult[CompanyServiceModel]"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Company/getCompany": {
      "get": {
        "tags": [
          "Company"
        ],
        "operationId": "GetCompany",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CompanyServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Company/saveCompany": {
      "post": {
        "tags": [
          "Company"
        ],
        "operationId": "SaveCompany",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CompanyServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CompanyServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Company/deleteCompany": {
      "post": {
        "tags": [
          "Company"
        ],
        "operationId": "DeleteCompany",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Config/getConfiguration": {
      "post": {
        "tags": [
          "Config"
        ],
        "operationId": "GetConfiguration",
        "consumes": [],
        "produces": [],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ConfigurationServiceModel"
            }
          }
        }
      }
    },
    "/api/Config/getConfig": {
      "get": {
        "tags": [
          "Config"
        ],
        "operationId": "GetConfig",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "typeName",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/Config/saveConfig": {
      "get": {
        "tags": [
          "Config"
        ],
        "operationId": "SaveConfig",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "typeName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serializedConfig",
            "in": "body",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/Config/explain": {
      "get": {
        "tags": [
          "Config"
        ],
        "operationId": "Explain",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "typeName",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/api/Dashboard/getAnalytic": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "GetAnalytic",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "timezoneHoursOffset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "start",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "end",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AnalyticServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Dashboard/getAnalyticThisWeek": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "GetAnalyticThisWeek",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "timezoneHoursOffset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AnalyticServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Dashboard/getAnalyticThisMonth": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "GetAnalyticThisMonth",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "timezoneHoursOffset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AnalyticServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Dashboard/getAnalyticLast90Days": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "GetAnalyticLast90Days",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "timezoneHoursOffset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AnalyticServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Dashboard/getAnalyticYtd": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "GetAnalyticYtd",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "timezoneHoursOffset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AnalyticServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Document/getDocumentTypes": {
      "post": {
        "tags": [
          "Document"
        ],
        "operationId": "GetDocumentTypes",
        "consumes": [],
        "produces": [],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/DocumentTypeServiceModel"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Document/getDocumentList": {
      "post": {
        "tags": [
          "Document"
        ],
        "operationId": "GetDocumentList",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/GetDocumentListRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/DocumentListItemServiceModel"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Document/pdf/{id}": {
      "get": {
        "tags": [
          "Document"
        ],
        "operationId": "GetDocumentPdf",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Document/signDocument": {
      "post": {
        "tags": [
          "Document"
        ],
        "operationId": "SignDocument",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/SignDocumentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ShipmentServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Document/uploadImageDocument": {
      "post": {
        "tags": [
          "Document"
        ],
        "operationId": "UploadImageDocument",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UploadImageDocumentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ShipmentServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Document/getDocuments": {
      "post": {
        "tags": [
          "Document"
        ],
        "operationId": "GetDocuments",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DocumentQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QueryResult[DocumentServiceModel]"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Document/getDocument": {
      "get": {
        "tags": [
          "Document"
        ],
        "operationId": "GetDocument",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DocumentServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Document/saveDocument": {
      "post": {
        "tags": [
          "Document"
        ],
        "operationId": "SaveDocument",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DocumentServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DocumentServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Document/deleteDocument": {
      "post": {
        "tags": [
          "Document"
        ],
        "operationId": "DeleteDocument",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Driver/getDrivers": {
      "post": {
        "tags": [
          "Driver"
        ],
        "operationId": "GetDrivers",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DriverQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QueryResult[DriverServiceModel]"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Driver/getDriver": {
      "get": {
        "tags": [
          "Driver"
        ],
        "operationId": "GetDriver",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DriverServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Driver/saveDriver": {
      "post": {
        "tags": [
          "Driver"
        ],
        "operationId": "SaveDriver",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DriverServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DriverServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Driver/deleteDriver": {
      "post": {
        "tags": [
          "Driver"
        ],
        "operationId": "DeleteDriver",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/DriverSafety/getDriverSafety": {
      "get": {
        "tags": [
          "DriverSafety"
        ],
        "operationId": "GetDriverSafety",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DriverSafetyServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/EdiConfig/getEdiConfigs": {
      "post": {
        "tags": [
          "EdiConfig"
        ],
        "operationId": "GetEdiConfigs",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/EdiConfigQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QueryResult[EdiConfigServiceModel]"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/EdiConfig/getEdiConfig": {
      "get": {
        "tags": [
          "EdiConfig"
        ],
        "operationId": "GetEdiConfig",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EdiConfigServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/EdiConfig/saveEdiConfig": {
      "post": {
        "tags": [
          "EdiConfig"
        ],
        "operationId": "SaveEdiConfig",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/EdiConfigServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EdiConfigServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/EdiConfig/deleteEdiConfig": {
      "post": {
        "tags": [
          "EdiConfig"
        ],
        "operationId": "DeleteEdiConfig",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/EdiMessageLog/getEdiMessageLogs": {
      "post": {
        "tags": [
          "EdiMessageLog"
        ],
        "operationId": "GetEdiMessageLogs",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/EdiMessageLogQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QueryResult[EdiMessageLogServiceModel]"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/EdiMessageLog/getEdiMessageLog": {
      "get": {
        "tags": [
          "EdiMessageLog"
        ],
        "operationId": "GetEdiMessageLog",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EdiMessageLogServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/EdiMessageLog/saveEdiMessageLog": {
      "post": {
        "tags": [
          "EdiMessageLog"
        ],
        "operationId": "SaveEdiMessageLog",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/EdiMessageLogServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EdiMessageLogServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/EdiMessageLog/deleteEdiMessageLog": {
      "post": {
        "tags": [
          "EdiMessageLog"
        ],
        "operationId": "DeleteEdiMessageLog",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/EdiTender/getEdiTenders": {
      "post": {
        "tags": [
          "EdiTender"
        ],
        "operationId": "GetEdiTenders",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/EdiTenderQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QueryResult[EdiTenderServiceModel]"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/EdiTender/getEdiTender": {
      "get": {
        "tags": [
          "EdiTender"
        ],
        "operationId": "GetEdiTender",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EdiTenderServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/EdiTender/saveEdiTender": {
      "post": {
        "tags": [
          "EdiTender"
        ],
        "operationId": "SaveEdiTender",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/EdiTenderServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EdiTenderServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/EdiTender/deleteEdiTender": {
      "post": {
        "tags": [
          "EdiTender"
        ],
        "operationId": "DeleteEdiTender",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Equipment/getEquipments": {
      "post": {
        "tags": [
          "Equipment"
        ],
        "operationId": "GetEquipments",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/EquipmentQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QueryResult[EquipmentServiceModel]"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Equipment/getEquipment": {
      "get": {
        "tags": [
          "Equipment"
        ],
        "operationId": "GetEquipment",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EquipmentServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Equipment/saveEquipment": {
      "post": {
        "tags": [
          "Equipment"
        ],
        "operationId": "SaveEquipment",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/EquipmentServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EquipmentServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Equipment/deleteEquipment": {
      "post": {
        "tags": [
          "Equipment"
        ],
        "operationId": "DeleteEquipment",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/EquipmentLength/getEquipmentLengths": {
      "post": {
        "tags": [
          "EquipmentLength"
        ],
        "operationId": "GetEquipmentLengths",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/EquipmentLengthQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QueryResult[EquipmentLengthServiceModel]"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/EquipmentLength/getEquipmentLength": {
      "get": {
        "tags": [
          "EquipmentLength"
        ],
        "operationId": "GetEquipmentLength",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EquipmentLengthServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/EquipmentLength/saveEquipmentLength": {
      "post": {
        "tags": [
          "EquipmentLength"
        ],
        "operationId": "SaveEquipmentLength",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/EquipmentLengthServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EquipmentLengthServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/EquipmentLength/deleteEquipmentLength": {
      "post": {
        "tags": [
          "EquipmentLength"
        ],
        "operationId": "DeleteEquipmentLength",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/EquipmentType/getEquipmentTypes": {
      "post": {
        "tags": [
          "EquipmentType"
        ],
        "operationId": "GetEquipmentTypes",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/EquipmentTypeQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QueryResult[EquipmentTypeServiceModel]"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/EquipmentType/getEquipmentType": {
      "get": {
        "tags": [
          "EquipmentType"
        ],
        "operationId": "GetEquipmentType",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EquipmentTypeServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/EquipmentType/saveEquipmentType": {
      "post": {
        "tags": [
          "EquipmentType"
        ],
        "operationId": "SaveEquipmentType",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/EquipmentTypeServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EquipmentTypeServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/EquipmentType/deleteEquipmentType": {
      "post": {
        "tags": [
          "EquipmentType"
        ],
        "operationId": "DeleteEquipmentType",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/HandlingUnit/getHandlingUnits": {
      "post": {
        "tags": [
          "HandlingUnit"
        ],
        "operationId": "GetHandlingUnits",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/HandlingUnitQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QueryResult[HandlingUnitServiceModel]"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/HandlingUnit/getHandlingUnit": {
      "get": {
        "tags": [
          "HandlingUnit"
        ],
        "operationId": "GetHandlingUnit",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/HandlingUnitServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/HandlingUnit/saveHandlingUnit": {
      "post": {
        "tags": [
          "HandlingUnit"
        ],
        "operationId": "SaveHandlingUnit",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/HandlingUnitServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/HandlingUnitServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/HandlingUnit/deleteHandlingUnit": {
      "post": {
        "tags": [
          "HandlingUnit"
        ],
        "operationId": "DeleteHandlingUnit",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Invitation/inviteCarrier": {
      "post": {
        "tags": [
          "Invitation"
        ],
        "operationId": "InviteCarrier",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CarrierServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/InvitationServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Invitation/inviteShipper": {
      "post": {
        "tags": [
          "Invitation"
        ],
        "operationId": "InviteShipper",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ShipperServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/InvitationServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Invitation/acceptInvitation": {
      "post": {
        "tags": [
          "Invitation"
        ],
        "operationId": "Accept",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/InvitationServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Invitation/declineInvitation": {
      "post": {
        "tags": [
          "Invitation"
        ],
        "operationId": "Decline",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/InvitationServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Invitation/getInvitations": {
      "post": {
        "tags": [
          "Invitation"
        ],
        "operationId": "GetInvitations",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Query"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QueryResult[InvitationServiceModel]"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Invitation/getInvitation": {
      "get": {
        "tags": [
          "Invitation"
        ],
        "operationId": "GetInvitation",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/InvitationServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Invitation/saveInvitation": {
      "post": {
        "tags": [
          "Invitation"
        ],
        "operationId": "SaveInvitation",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/InvitationServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/InvitationServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Invitation/deleteInvitation": {
      "post": {
        "tags": [
          "Invitation"
        ],
        "operationId": "DeleteInvitation",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/InvitationServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/InvoiceItem/resolveToInvoice": {
      "post": {
        "tags": [
          "InvoiceItem"
        ],
        "operationId": "ResolveToInvoice",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/InvoiceItemQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/InvoiceItem/getInvoiceItems": {
      "post": {
        "tags": [
          "InvoiceItem"
        ],
        "operationId": "GetInvoiceItems",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/InvoiceItemQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QueryResult[InvoiceItemServiceModel]"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/InvoiceItem/getInvoiceItem": {
      "get": {
        "tags": [
          "InvoiceItem"
        ],
        "operationId": "GetInvoiceItem",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/InvoiceItemServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/InvoiceItem/saveInvoiceItem": {
      "post": {
        "tags": [
          "InvoiceItem"
        ],
        "operationId": "SaveInvoiceItem",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/InvoiceItemServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/InvoiceItemServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/InvoiceItem/deleteInvoiceItem": {
      "post": {
        "tags": [
          "InvoiceItem"
        ],
        "operationId": "DeleteInvoiceItem",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/InvoiceItemCategory/getInvoiceItemCategories": {
      "post": {
        "tags": [
          "InvoiceItemCategory"
        ],
        "operationId": "GetInvoiceItemCategories",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/InvoiceItemCategoryQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QueryResult[InvoiceItemCategoryServiceModel]"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/InvoiceItemCategory/getInvoiceItemCategory": {
      "get": {
        "tags": [
          "InvoiceItemCategory"
        ],
        "operationId": "GetInvoiceItemCategory",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/InvoiceItemCategoryServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/InvoiceItemCategory/saveInvoiceItemCategory": {
      "post": {
        "tags": [
          "InvoiceItemCategory"
        ],
        "operationId": "SaveInvoiceItemCategory",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/InvoiceItemCategoryServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/InvoiceItemCategoryServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/InvoiceItemCategory/deleteInvoiceItemCategory": {
      "post": {
        "tags": [
          "InvoiceItemCategory"
        ],
        "operationId": "DeleteInvoiceItemCategory",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/InvoiceParticipant/getInvoiceParticipants": {
      "post": {
        "tags": [
          "InvoiceParticipant"
        ],
        "operationId": "GetInvoiceParticipants",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/InvoiceParticipantQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QueryResult[InvoiceParticipantServiceModel]"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/InvoiceParticipant/getInvoiceParticipant": {
      "get": {
        "tags": [
          "InvoiceParticipant"
        ],
        "operationId": "GetInvoiceParticipant",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/InvoiceParticipantServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/InvoiceParticipant/saveInvoiceParticipant": {
      "post": {
        "tags": [
          "InvoiceParticipant"
        ],
        "operationId": "SaveInvoiceParticipant",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/InvoiceParticipantServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/InvoiceParticipantServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/InvoiceParticipant/deleteInvoiceParticipant": {
      "post": {
        "tags": [
          "InvoiceParticipant"
        ],
        "operationId": "DeleteInvoiceParticipant",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/LadingItem/getLadingItems": {
      "post": {
        "tags": [
          "LadingItem"
        ],
        "operationId": "GetLadingItems",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/LadingItemQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QueryResult[LadingItemServiceModel]"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/LadingItem/getLadingItem": {
      "get": {
        "tags": [
          "LadingItem"
        ],
        "operationId": "GetLadingItem",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/LadingItemServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/LadingItem/saveLadingItem": {
      "post": {
        "tags": [
          "LadingItem"
        ],
        "operationId": "SaveLadingItem",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/LadingItemServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/LadingItemServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/LadingItem/deleteLadingItem": {
      "post": {
        "tags": [
          "LadingItem"
        ],
        "operationId": "DeleteLadingItem",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/LineItemType/getLineItemTypes": {
      "post": {
        "tags": [
          "LineItemType"
        ],
        "operationId": "GetLineItemTypes",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/LineItemTypeQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QueryResult[LineItemTypeServiceModel]"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/LineItemType/getLineItemType": {
      "get": {
        "tags": [
          "LineItemType"
        ],
        "operationId": "GetLineItemType",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/LineItemTypeServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/LineItemType/saveLineItemType": {
      "post": {
        "tags": [
          "LineItemType"
        ],
        "operationId": "SaveLineItemType",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/LineItemTypeServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/LineItemTypeServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/LineItemType/deleteLineItemType": {
      "post": {
        "tags": [
          "LineItemType"
        ],
        "operationId": "DeleteLineItemType",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/LoadSize/getLoadSizes": {
      "post": {
        "tags": [
          "LoadSize"
        ],
        "operationId": "GetLoadSizes",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/LoadSizeQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QueryResult[LoadSizeServiceModel]"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/LoadSize/getLoadSize": {
      "get": {
        "tags": [
          "LoadSize"
        ],
        "operationId": "GetLoadSize",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/LoadSizeServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/LoadSize/saveLoadSize": {
      "post": {
        "tags": [
          "LoadSize"
        ],
        "operationId": "SaveLoadSize",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/LoadSizeServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/LoadSizeServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/LoadSize/deleteLoadSize": {
      "post": {
        "tags": [
          "LoadSize"
        ],
        "operationId": "DeleteLoadSize",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/NmfcClass/getNmfcClasses": {
      "post": {
        "tags": [
          "NmfcClass"
        ],
        "operationId": "GetNmfcClasses",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/NmfcClassQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QueryResult[NmfcClassServiceModel]"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/NmfcClass/getNmfcClass": {
      "get": {
        "tags": [
          "NmfcClass"
        ],
        "operationId": "GetNmfcClass",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/NmfcClassServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/NmfcClass/saveNmfcClass": {
      "post": {
        "tags": [
          "NmfcClass"
        ],
        "operationId": "SaveNmfcClass",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/NmfcClassServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/NmfcClassServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/NmfcClass/deleteNmfcClass": {
      "post": {
        "tags": [
          "NmfcClass"
        ],
        "operationId": "DeleteNmfcClass",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/NmfcNumber/getNmfcNumbers": {
      "post": {
        "tags": [
          "NmfcNumber"
        ],
        "operationId": "GetNmfcNumbers",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/NmfcNumberQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QueryResult[NmfcNumberServiceModel]"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/NmfcNumber/getNmfcNumber": {
      "get": {
        "tags": [
          "NmfcNumber"
        ],
        "operationId": "GetNmfcNumber",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/NmfcNumberServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/NmfcNumber/saveNmfcNumber": {
      "post": {
        "tags": [
          "NmfcNumber"
        ],
        "operationId": "SaveNmfcNumber",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/NmfcNumberServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/NmfcNumberServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/NmfcNumber/deleteNmfcNumber": {
      "post": {
        "tags": [
          "NmfcNumber"
        ],
        "operationId": "DeleteNmfcNumber",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Notifications/getMyNotifications": {
      "post": {
        "tags": [
          "Notifications"
        ],
        "operationId": "GetMyNotifications",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "take",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 10
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/NotificationsServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Notifications/markAllRead": {
      "post": {
        "tags": [
          "Notifications"
        ],
        "operationId": "MarkAllRead",
        "consumes": [],
        "produces": [],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Notifications/markRead": {
      "post": {
        "tags": [
          "Notifications"
        ],
        "operationId": "MarkRead",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "referenceId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Notifications/toggleSubscription": {
      "post": {
        "tags": [
          "Notifications"
        ],
        "operationId": "ToggleSubscription",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "referenceId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/NotificationServiceModel"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/OrderItem/getOrderItems": {
      "post": {
        "tags": [
          "OrderItem"
        ],
        "operationId": "GetOrderItems",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/OrderItemQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QueryResult[OrderItemServiceModel]"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/OrderItem/getOrderItem": {
      "get": {
        "tags": [
          "OrderItem"
        ],
        "operationId": "GetOrderItem",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OrderItemServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/OrderItem/saveOrderItem": {
      "post": {
        "tags": [
          "OrderItem"
        ],
        "operationId": "SaveOrderItem",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/OrderItemServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OrderItemServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/OrderItem/deleteOrderItem": {
      "post": {
        "tags": [
          "OrderItem"
        ],
        "operationId": "DeleteOrderItem",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/OrderItemReferenceNumberType/getOrderItemReferenceNumberTypes": {
      "post": {
        "tags": [
          "OrderItemReferenceNumberType"
        ],
        "operationId": "GetOrderItemReferenceNumberTypes",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/OrderItemReferenceNumberTypeQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QueryResult[OrderItemReferenceNumberTypeServiceModel]"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/OrderItemReferenceNumberType/getOrderItemReferenceNumberType": {
      "get": {
        "tags": [
          "OrderItemReferenceNumberType"
        ],
        "operationId": "GetOrderItemReferenceNumberType",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OrderItemReferenceNumberTypeServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/OrderItemReferenceNumberType/saveOrderItemReferenceNumberType": {
      "post": {
        "tags": [
          "OrderItemReferenceNumberType"
        ],
        "operationId": "SaveOrderItemReferenceNumberType",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/OrderItemReferenceNumberTypeServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OrderItemReferenceNumberTypeServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/OrderItemReferenceNumberType/deleteOrderItemReferenceNumberType": {
      "post": {
        "tags": [
          "OrderItemReferenceNumberType"
        ],
        "operationId": "DeleteOrderItemReferenceNumberType",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/PackageType/getPackageTypes": {
      "post": {
        "tags": [
          "PackageType"
        ],
        "operationId": "GetPackageTypes",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/PackageTypeQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QueryResult[PackageTypeServiceModel]"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/PackageType/getPackageType": {
      "get": {
        "tags": [
          "PackageType"
        ],
        "operationId": "GetPackageType",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PackageTypeServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/PackageType/savePackageType": {
      "post": {
        "tags": [
          "PackageType"
        ],
        "operationId": "SavePackageType",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/PackageTypeServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PackageTypeServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/PackageType/deletePackageType": {
      "post": {
        "tags": [
          "PackageType"
        ],
        "operationId": "DeletePackageType",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Permission/getPermissions": {
      "post": {
        "tags": [
          "Permission"
        ],
        "operationId": "GetPermissions",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/PermissionQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QueryResult[PermissionServiceModel]"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Permission/getPermission": {
      "get": {
        "tags": [
          "Permission"
        ],
        "operationId": "GetPermission",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PermissionServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Permission/savePermission": {
      "post": {
        "tags": [
          "Permission"
        ],
        "operationId": "SavePermission",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/PermissionServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PermissionServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Permission/deletePermission": {
      "post": {
        "tags": [
          "Permission"
        ],
        "operationId": "DeletePermission",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/PushNotifications/registerDevice/{deviceId}": {
      "post": {
        "tags": [
          "PushNotifications"
        ],
        "operationId": "RegisterDevice",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QueryResult[Object]"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/PushNotifications/unregisterDevice/{deviceId}": {
      "post": {
        "tags": [
          "PushNotifications"
        ],
        "operationId": "UnregisterDevice",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QueryResult[Object]"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/PushNotifications/testNotification": {
      "post": {
        "tags": [
          "PushNotifications"
        ],
        "operationId": "TestNotification",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "message",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/PushMessageVm"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QueryResult[Object]"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Role/addUser": {
      "post": {
        "tags": [
          "Role"
        ],
        "operationId": "AddUser",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/AddUserRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RoleServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Role/addPermission": {
      "post": {
        "tags": [
          "Role"
        ],
        "operationId": "AddPermission",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/AddPermissionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RoleServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Role/getRoles": {
      "post": {
        "tags": [
          "Role"
        ],
        "operationId": "GetRoles",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/RoleQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QueryResult[RoleServiceModel]"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Role/getRole": {
      "get": {
        "tags": [
          "Role"
        ],
        "operationId": "GetRole",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RoleServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Role/saveRole": {
      "post": {
        "tags": [
          "Role"
        ],
        "operationId": "SaveRole",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/RoleServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RoleServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Role/deleteRole": {
      "post": {
        "tags": [
          "Role"
        ],
        "operationId": "DeleteRole",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/RoleClaim/getRoleClaims": {
      "post": {
        "tags": [
          "RoleClaim"
        ],
        "operationId": "GetRoleClaims",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/RoleClaimQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QueryResult[RoleClaimServiceModel]"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/RoleClaim/getRoleClaim": {
      "get": {
        "tags": [
          "RoleClaim"
        ],
        "operationId": "GetRoleClaim",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RoleClaimServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/RoleClaim/saveRoleClaim": {
      "post": {
        "tags": [
          "RoleClaim"
        ],
        "operationId": "SaveRoleClaim",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/RoleClaimServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RoleClaimServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/RoleClaim/deleteRoleClaim": {
      "post": {
        "tags": [
          "RoleClaim"
        ],
        "operationId": "DeleteRoleClaim",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/SaferCarrier/getSaferCarriers": {
      "post": {
        "tags": [
          "SaferCarrier"
        ],
        "operationId": "GetSaferCarriers",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/SaferCarrierQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QueryResult[SaferCarrierServiceModel]"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/SaferCarrier/getSaferCarrier": {
      "get": {
        "tags": [
          "SaferCarrier"
        ],
        "operationId": "GetSaferCarrier",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SaferCarrierServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/SaferCarrier/saveSaferCarrier": {
      "post": {
        "tags": [
          "SaferCarrier"
        ],
        "operationId": "SaveSaferCarrier",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/SaferCarrierServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SaferCarrierServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/SaferCarrier/deleteSaferCarrier": {
      "post": {
        "tags": [
          "SaferCarrier"
        ],
        "operationId": "DeleteSaferCarrier",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/SamsaraConfig/getSamsaraConfig": {
      "get": {
        "tags": [
          "SamsaraConfig"
        ],
        "operationId": "GetSamsaraConfig",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SamsaraConfigServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/SamsaraConfig/saveSamsaraConfig": {
      "post": {
        "tags": [
          "SamsaraConfig"
        ],
        "operationId": "SaveSamsaraConfig",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/SamsaraConfigServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SamsaraConfigServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Shipment/getShipmentCarriers": {
      "post": {
        "tags": [
          "Shipment"
        ],
        "operationId": "GetShipmentCarriers",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/QueryShipmentCarriersRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QueryResult[ShipmentCarrierServiceModel]"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Shipment/refreshDispatch": {
      "post": {
        "tags": [
          "Shipment"
        ],
        "operationId": "RefreshDispatch",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ShipmentDriverDispatchRefreshRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Shipment/saveLoadInformation": {
      "post": {
        "tags": [
          "Shipment"
        ],
        "operationId": "SaveLoadInformation",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/SaveLoadInformationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ShipmentServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Shipment/saveStops": {
      "post": {
        "tags": [
          "Shipment"
        ],
        "operationId": "SaveStops",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/SaveStopsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ShipmentServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Shipment/getStopsEstimates": {
      "post": {
        "tags": [
          "Shipment"
        ],
        "operationId": "GetStopsEstimates",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/RefreshStopsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/StopServiceModel"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Shipment/saveAdditionalInformation": {
      "post": {
        "tags": [
          "Shipment"
        ],
        "operationId": "SaveAdditionalInformation",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "shipmentID",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/AdditionalInfoServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ShipmentServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Shipment/savePickupInformation": {
      "post": {
        "tags": [
          "Shipment"
        ],
        "operationId": "SavePickupInformation",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "shipmentID",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceModel",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/PickupInfoServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ShipmentServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Shipment/requestQuote": {
      "post": {
        "tags": [
          "Shipment"
        ],
        "operationId": "RequestQuote",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "shippingQuoteId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "carrierId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CarrierQuoteRequestServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Shipment/denyQuote": {
      "post": {
        "tags": [
          "Shipment"
        ],
        "operationId": "DenyCarrierRequest",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DenyCarrierQuoteRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CarrierQuoteRequestServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Shipment/awardCarrier": {
      "post": {
        "tags": [
          "Shipment"
        ],
        "operationId": "AwardCarrier",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/AwardCarrierLoadRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ShipmentServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Shipment/bookNow": {
      "post": {
        "tags": [
          "Shipment"
        ],
        "operationId": "BookNow",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "shippingQuoteId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ShipmentServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Shipment/completeBooking": {
      "post": {
        "tags": [
          "Shipment"
        ],
        "operationId": "CompleteBooking",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "shipmentId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ShipmentServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Shipment/shipperSign": {
      "post": {
        "tags": [
          "Shipment"
        ],
        "operationId": "ShipperSign",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "signModel",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ShipmentFinalizeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ShipmentServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Shipment/saveTrackingInformation": {
      "post": {
        "tags": [
          "Shipment"
        ],
        "operationId": "SaveTrackingInformation",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/SaveTrackingInformationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ShipmentServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Shipment/addTrackingLocation": {
      "post": {
        "tags": [
          "Shipment"
        ],
        "operationId": "AddTrackingLocation",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/AddTrackingLocationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ShipmentServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Shipment/assignDriver": {
      "post": {
        "tags": [
          "Shipment"
        ],
        "operationId": "AssignDriver",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/AssignDriverRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ShipmentServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Shipment/carrierSign": {
      "post": {
        "tags": [
          "Shipment"
        ],
        "operationId": "CarrierSign",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "signModel",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CarrierSignRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ShipmentServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Shipment/deliverySign": {
      "post": {
        "tags": [
          "Shipment"
        ],
        "operationId": "DeliverySign",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "signModel",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DeliverySignRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ShipmentServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Shipment/acceptShipment": {
      "post": {
        "tags": [
          "Shipment"
        ],
        "operationId": "AcceptShipment",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/AcceptShipmentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ShipmentServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Shipment/begin": {
      "post": {
        "tags": [
          "Shipment"
        ],
        "operationId": "Begin",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/BeginRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ShipmentServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Shipment/complete": {
      "post": {
        "tags": [
          "Shipment"
        ],
        "operationId": "Complete",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CompleteRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ShipmentServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Shipment/refreshPartners": {
      "post": {
        "tags": [
          "Shipment"
        ],
        "operationId": "RefreshPartners",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/RefreshPartnersRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ShipmentServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Shipment/shipmentDecline": {
      "post": {
        "tags": [
          "Shipment"
        ],
        "operationId": "ShipmentDecline",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ShipmentDeclineRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ShipmentServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Shipment/shipmentCancel": {
      "post": {
        "tags": [
          "Shipment"
        ],
        "operationId": "ShipmentCancel",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ShipmentCancelRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ShipmentServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Shipment/trackingSettings": {
      "post": {
        "tags": [
          "Shipment"
        ],
        "operationId": "TrackingSettings",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/TrackingSettingsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ShipmentServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Shipment/getShipments": {
      "post": {
        "tags": [
          "Shipment"
        ],
        "operationId": "GetShipments",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ShipmentQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QueryResult[ShipmentServiceModel]"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Shipment/getShipment": {
      "get": {
        "tags": [
          "Shipment"
        ],
        "operationId": "GetShipment",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ShipmentServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Shipment/saveShipment": {
      "post": {
        "tags": [
          "Shipment"
        ],
        "operationId": "SaveShipment",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ShipmentServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ShipmentServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Shipment/deleteShipment": {
      "post": {
        "tags": [
          "Shipment"
        ],
        "operationId": "DeleteShipment",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/ShipmentAppointmentStatusCode/getShipmentAppointmentStatusCodes": {
      "post": {
        "tags": [
          "ShipmentAppointmentStatusCode"
        ],
        "operationId": "GetShipmentAppointmentStatusCodes",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ShipmentAppointmentStatusCodeQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QueryResult[ShipmentAppointmentStatusCodeServiceModel]"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/ShipmentAppointmentStatusCode/getShipmentAppointmentStatusCode": {
      "get": {
        "tags": [
          "ShipmentAppointmentStatusCode"
        ],
        "operationId": "GetShipmentAppointmentStatusCode",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ShipmentAppointmentStatusCodeServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/ShipmentAppointmentStatusCode/saveShipmentAppointmentStatusCode": {
      "post": {
        "tags": [
          "ShipmentAppointmentStatusCode"
        ],
        "operationId": "SaveShipmentAppointmentStatusCode",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ShipmentAppointmentStatusCodeServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ShipmentAppointmentStatusCodeServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/ShipmentAppointmentStatusCode/deleteShipmentAppointmentStatusCode": {
      "post": {
        "tags": [
          "ShipmentAppointmentStatusCode"
        ],
        "operationId": "DeleteShipmentAppointmentStatusCode",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/ShipmentBol/bol/{shippingQuoteId}": {
      "get": {
        "tags": [
          "ShipmentBol"
        ],
        "operationId": "BillOfLadingFromQuote",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "shippingQuoteId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/ShipmentBol/bolpdf/{shipmentId}": {
      "get": {
        "tags": [
          "ShipmentBol"
        ],
        "operationId": "BillOfLadingFromShipment",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "shipmentId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/ShipmentBol/bolhash/{shipmentId}": {
      "get": {
        "tags": [
          "ShipmentBol"
        ],
        "operationId": "BillOfLadingHashFromShipment",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "shipmentId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/ShipmentConfig/getShipmentConfig": {
      "get": {
        "tags": [
          "ShipmentConfig"
        ],
        "operationId": "GetShipmentConfig",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ShipmentConfigServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/ShipmentConfig/saveShipmentConfig": {
      "post": {
        "tags": [
          "ShipmentConfig"
        ],
        "operationId": "SaveShipmentConfig",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ShipmentConfigServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ShipmentConfigServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/ShipmentDeclineReasonCode/getShipmentDeclineReasonCodes": {
      "post": {
        "tags": [
          "ShipmentDeclineReasonCode"
        ],
        "operationId": "GetShipmentDeclineReasonCodes",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ShipmentDeclineReasonCodeQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QueryResult[ShipmentDeclineReasonCodeServiceModel]"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/ShipmentDeclineReasonCode/getShipmentDeclineReasonCode": {
      "get": {
        "tags": [
          "ShipmentDeclineReasonCode"
        ],
        "operationId": "GetShipmentDeclineReasonCode",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ShipmentDeclineReasonCodeServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/ShipmentDeclineReasonCode/saveShipmentDeclineReasonCode": {
      "post": {
        "tags": [
          "ShipmentDeclineReasonCode"
        ],
        "operationId": "SaveShipmentDeclineReasonCode",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ShipmentDeclineReasonCodeServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ShipmentDeclineReasonCodeServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/ShipmentDeclineReasonCode/deleteShipmentDeclineReasonCode": {
      "post": {
        "tags": [
          "ShipmentDeclineReasonCode"
        ],
        "operationId": "DeleteShipmentDeclineReasonCode",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/ShipmentDriverDispatch/getShipmentDriverDispatches": {
      "post": {
        "tags": [
          "ShipmentDriverDispatch"
        ],
        "operationId": "GetShipmentDriverDispatches",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ShipmentDriverDispatchQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QueryResult[ShipmentDriverDispatchServiceModel]"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/ShipmentStatusCode/getShipmentStatusCodes": {
      "post": {
        "tags": [
          "ShipmentStatusCode"
        ],
        "operationId": "GetShipmentStatusCodes",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ShipmentStatusCodeQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QueryResult[ShipmentStatusCodeServiceModel]"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/ShipmentStatusCode/getShipmentStatusCode": {
      "get": {
        "tags": [
          "ShipmentStatusCode"
        ],
        "operationId": "GetShipmentStatusCode",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ShipmentStatusCodeServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/ShipmentStatusCode/saveShipmentStatusCode": {
      "post": {
        "tags": [
          "ShipmentStatusCode"
        ],
        "operationId": "SaveShipmentStatusCode",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ShipmentStatusCodeServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ShipmentStatusCodeServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/ShipmentStatusCode/deleteShipmentStatusCode": {
      "post": {
        "tags": [
          "ShipmentStatusCode"
        ],
        "operationId": "DeleteShipmentStatusCode",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/ShipmentStatusUpdateType/getShipmentStatusUpdateTypes": {
      "post": {
        "tags": [
          "ShipmentStatusUpdateType"
        ],
        "operationId": "GetShipmentStatusUpdateTypes",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ShipmentStatusUpdateTypeQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QueryResult[ShipmentStatusUpdateTypeServiceModel]"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/ShipmentStatusUpdateType/getShipmentStatusUpdateType": {
      "get": {
        "tags": [
          "ShipmentStatusUpdateType"
        ],
        "operationId": "GetShipmentStatusUpdateType",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ShipmentStatusUpdateTypeServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/ShipmentStatusUpdateType/saveShipmentStatusUpdateType": {
      "post": {
        "tags": [
          "ShipmentStatusUpdateType"
        ],
        "operationId": "SaveShipmentStatusUpdateType",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ShipmentStatusUpdateTypeServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ShipmentStatusUpdateTypeServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/ShipmentStatusUpdateType/deleteShipmentStatusUpdateType": {
      "post": {
        "tags": [
          "ShipmentStatusUpdateType"
        ],
        "operationId": "DeleteShipmentStatusUpdateType",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/ShipmentTradingPartner/sendTender": {
      "post": {
        "tags": [
          "ShipmentTradingPartner"
        ],
        "operationId": "SendTender",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/SendTenderRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ShipmentTradingPartnerServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/ShipmentTradingPartner/getShipmentTradingPartners": {
      "post": {
        "tags": [
          "ShipmentTradingPartner"
        ],
        "operationId": "GetShipmentTradingPartners",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ShipmentTradingPartnerQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QueryResult[ShipmentTradingPartnerServiceModel]"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/ShipmentTradingPartner/getShipmentTradingPartner": {
      "get": {
        "tags": [
          "ShipmentTradingPartner"
        ],
        "operationId": "GetShipmentTradingPartner",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ShipmentTradingPartnerServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/ShipmentTradingPartner/saveShipmentTradingPartner": {
      "post": {
        "tags": [
          "ShipmentTradingPartner"
        ],
        "operationId": "SaveShipmentTradingPartner",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ShipmentTradingPartnerServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ShipmentTradingPartnerServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/ShipmentTradingPartner/deleteShipmentTradingPartner": {
      "post": {
        "tags": [
          "ShipmentTradingPartner"
        ],
        "operationId": "DeleteShipmentTradingPartner",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Shipper/getShippers": {
      "post": {
        "tags": [
          "Shipper"
        ],
        "operationId": "GetShippers",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ShipperQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QueryResult[ShipperServiceModel]"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Shipper/getShipper": {
      "get": {
        "tags": [
          "Shipper"
        ],
        "operationId": "GetShipper",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ShipperServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Shipper/saveShipper": {
      "post": {
        "tags": [
          "Shipper"
        ],
        "operationId": "SaveShipper",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ShipperServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ShipperServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Shipper/deleteShipper": {
      "post": {
        "tags": [
          "Shipper"
        ],
        "operationId": "DeleteShipper",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Stop/stopStatusUpdate": {
      "post": {
        "tags": [
          "Stop"
        ],
        "operationId": "StopStatusUpdate",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/StopStatusUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StopServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Stop/getStops": {
      "post": {
        "tags": [
          "Stop"
        ],
        "operationId": "GetStops",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/StopQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QueryResult[StopServiceModel]"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Stop/getStop": {
      "get": {
        "tags": [
          "Stop"
        ],
        "operationId": "GetStop",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StopServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Stop/saveStop": {
      "post": {
        "tags": [
          "Stop"
        ],
        "operationId": "SaveStop",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/StopServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StopServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Stop/deleteStop": {
      "post": {
        "tags": [
          "Stop"
        ],
        "operationId": "DeleteStop",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/StopEquipmentItem/getStopEquipmentItems": {
      "post": {
        "tags": [
          "StopEquipmentItem"
        ],
        "operationId": "GetStopEquipmentItems",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/StopEquipmentItemQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QueryResult[StopEquipmentItemServiceModel]"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/StopEquipmentItem/getStopEquipmentItem": {
      "get": {
        "tags": [
          "StopEquipmentItem"
        ],
        "operationId": "GetStopEquipmentItem",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StopEquipmentItemServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/StopEquipmentItem/saveStopEquipmentItem": {
      "post": {
        "tags": [
          "StopEquipmentItem"
        ],
        "operationId": "SaveStopEquipmentItem",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/StopEquipmentItemServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StopEquipmentItemServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/StopEquipmentItem/deleteStopEquipmentItem": {
      "post": {
        "tags": [
          "StopEquipmentItem"
        ],
        "operationId": "DeleteStopEquipmentItem",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/StopUpdate/getStopUpdates": {
      "post": {
        "tags": [
          "StopUpdate"
        ],
        "operationId": "GetStopUpdates",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/StopUpdateQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QueryResult[StopUpdateServiceModel]"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/StopUpdate/getStopUpdate": {
      "get": {
        "tags": [
          "StopUpdate"
        ],
        "operationId": "GetStopUpdate",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StopUpdateServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/StopUpdate/saveStopUpdate": {
      "post": {
        "tags": [
          "StopUpdate"
        ],
        "operationId": "SaveStopUpdate",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/StopUpdateServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StopUpdateServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/StopUpdate/deleteStopUpdate": {
      "post": {
        "tags": [
          "StopUpdate"
        ],
        "operationId": "DeleteStopUpdate",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Tender/getTenders": {
      "post": {
        "tags": [
          "Tender"
        ],
        "operationId": "GetTenders",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/TenderQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QueryResult[TenderServiceModel]"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Tender/getTender": {
      "get": {
        "tags": [
          "Tender"
        ],
        "operationId": "GetTender",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TenderServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Tender/saveTender": {
      "post": {
        "tags": [
          "Tender"
        ],
        "operationId": "SaveTender",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/TenderServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TenderServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Tender/deleteTender": {
      "post": {
        "tags": [
          "Tender"
        ],
        "operationId": "DeleteTender",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/Token/login": {
      "post": {
        "tags": [
          "Token"
        ],
        "operationId": "Login",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "password",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TokenResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/Token/refresh": {
      "post": {
        "tags": [
          "Token"
        ],
        "operationId": "Refresh",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "refresh_token",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TokenResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/TradingChannel/generateKeys": {
      "post": {
        "tags": [
          "TradingChannel"
        ],
        "operationId": "GenerateKeys",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/GenerateKeysRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradingChannelServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/TradingChannel/inviteNewPartner": {
      "post": {
        "tags": [
          "TradingChannel"
        ],
        "operationId": "InviteNewPartner",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/InviteNewPartnerRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradingChannelServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/TradingChannel/getTradingChannels": {
      "post": {
        "tags": [
          "TradingChannel"
        ],
        "operationId": "GetTradingChannels",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/TradingChannelQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QueryResult[TradingChannelServiceModel]"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/TradingChannel/getTradingChannel": {
      "get": {
        "tags": [
          "TradingChannel"
        ],
        "operationId": "GetTradingChannel",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradingChannelServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/TradingChannel/saveTradingChannel": {
      "post": {
        "tags": [
          "TradingChannel"
        ],
        "operationId": "SaveTradingChannel",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/TradingChannelServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradingChannelServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/TradingChannel/deleteTradingChannel": {
      "post": {
        "tags": [
          "TradingChannel"
        ],
        "operationId": "DeleteTradingChannel",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/TradingPartner/sendTestMessage": {
      "post": {
        "tags": [
          "TradingPartner"
        ],
        "operationId": "SendTestMessage",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/SendTestMessageRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradingPartnerServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/TradingPartner/getTradingPartners": {
      "post": {
        "tags": [
          "TradingPartner"
        ],
        "operationId": "GetTradingPartners",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/TradingPartnerQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QueryResult[TradingPartnerServiceModel]"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/TradingPartner/getTradingPartner": {
      "get": {
        "tags": [
          "TradingPartner"
        ],
        "operationId": "GetTradingPartner",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradingPartnerServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/TradingPartner/saveTradingPartner": {
      "post": {
        "tags": [
          "TradingPartner"
        ],
        "operationId": "SaveTradingPartner",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/TradingPartnerServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradingPartnerServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/TradingPartner/deleteTradingPartner": {
      "post": {
        "tags": [
          "TradingPartner"
        ],
        "operationId": "DeleteTradingPartner",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/TradingPartnerInvitation/acceptPartnerInvitation": {
      "post": {
        "tags": [
          "TradingPartnerInvitation"
        ],
        "operationId": "AcceptPartnerInvitation",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/AcceptPartnerInvitationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradingPartnerInvitationServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/TradingPartnerInvitation/getTradingPartnerInvitations": {
      "post": {
        "tags": [
          "TradingPartnerInvitation"
        ],
        "operationId": "GetTradingPartnerInvitations",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/TradingPartnerInvitationQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QueryResult[TradingPartnerInvitationServiceModel]"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/TradingPartnerInvitation/getTradingPartnerInvitation": {
      "get": {
        "tags": [
          "TradingPartnerInvitation"
        ],
        "operationId": "GetTradingPartnerInvitation",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradingPartnerInvitationServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/TradingPartnerInvitation/saveTradingPartnerInvitation": {
      "post": {
        "tags": [
          "TradingPartnerInvitation"
        ],
        "operationId": "SaveTradingPartnerInvitation",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/TradingPartnerInvitationServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradingPartnerInvitationServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/TradingPartnerInvitation/deleteTradingPartnerInvitation": {
      "post": {
        "tags": [
          "TradingPartnerInvitation"
        ],
        "operationId": "DeleteTradingPartnerInvitation",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/TradingPartnerMessage/getTradingPartnerMessages": {
      "post": {
        "tags": [
          "TradingPartnerMessage"
        ],
        "operationId": "GetTradingPartnerMessages",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/TradingPartnerMessageQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QueryResult[TradingPartnerMessageServiceModel]"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/TradingPartnerMessage/getTradingPartnerMessage": {
      "get": {
        "tags": [
          "TradingPartnerMessage"
        ],
        "operationId": "GetTradingPartnerMessage",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradingPartnerMessageServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/TradingPartnerMessage/saveTradingPartnerMessage": {
      "post": {
        "tags": [
          "TradingPartnerMessage"
        ],
        "operationId": "SaveTradingPartnerMessage",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/TradingPartnerMessageServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TradingPartnerMessageServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/TradingPartnerMessage/deleteTradingPartnerMessage": {
      "post": {
        "tags": [
          "TradingPartnerMessage"
        ],
        "operationId": "DeleteTradingPartnerMessage",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Trailer/getTrailers": {
      "post": {
        "tags": [
          "Trailer"
        ],
        "operationId": "GetTrailers",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/TrailerQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QueryResult[TrailerServiceModel]"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Trailer/getTrailer": {
      "get": {
        "tags": [
          "Trailer"
        ],
        "operationId": "GetTrailer",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TrailerServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Trailer/saveTrailer": {
      "post": {
        "tags": [
          "Trailer"
        ],
        "operationId": "SaveTrailer",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/TrailerServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TrailerServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Trailer/deleteTrailer": {
      "post": {
        "tags": [
          "Trailer"
        ],
        "operationId": "DeleteTrailer",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/User/getUsers": {
      "post": {
        "tags": [
          "User"
        ],
        "operationId": "GetUsers",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UserQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QueryResult[UserServiceModel]"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/User/getUser": {
      "get": {
        "tags": [
          "User"
        ],
        "operationId": "GetUser",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UserServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/User/saveUser": {
      "post": {
        "tags": [
          "User"
        ],
        "operationId": "SaveUser",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UserServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UserServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/User/deleteUser": {
      "post": {
        "tags": [
          "User"
        ],
        "operationId": "DeleteUser",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Vehicle/getVehicles": {
      "post": {
        "tags": [
          "Vehicle"
        ],
        "operationId": "GetVehicles",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/VehicleQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QueryResult[VehicleServiceModel]"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Vehicle/getVehicle": {
      "get": {
        "tags": [
          "Vehicle"
        ],
        "operationId": "GetVehicle",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/VehicleServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Vehicle/saveVehicle": {
      "post": {
        "tags": [
          "Vehicle"
        ],
        "operationId": "SaveVehicle",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/VehicleServiceModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/VehicleServiceModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    },
    "/api/Vehicle/deleteVehicle": {
      "post": {
        "tags": [
          "Vehicle"
        ],
        "operationId": "DeleteVehicle",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          }
        ]
      }
    }
  },
  "definitions": {
    "UserViewModel": {
      "required": [
        "userName",
        "email"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "userName": {
          "maxLength": 200,
          "minLength": 2,
          "type": "string"
        },
        "fullName": {
          "type": "string"
        },
        "email": {
          "maxLength": 200,
          "minLength": 0,
          "type": "string"
        },
        "jobTitle": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string"
        },
        "configuration": {
          "type": "string"
        },
        "isEnabled": {
          "type": "boolean"
        },
        "isLockedOut": {
          "type": "boolean"
        },
        "roles": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "notificationCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "UserEditViewModel": {
      "required": [
        "userName",
        "email"
      ],
      "type": "object",
      "properties": {
        "currentPassword": {
          "type": "string"
        },
        "newPassword": {
          "minLength": 6,
          "type": "string"
        },
        "isLockedOut": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "userName": {
          "maxLength": 200,
          "minLength": 2,
          "type": "string"
        },
        "fullName": {
          "type": "string"
        },
        "email": {
          "maxLength": 200,
          "minLength": 0,
          "type": "string"
        },
        "jobTitle": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string"
        },
        "configuration": {
          "type": "string"
        },
        "isEnabled": {
          "type": "boolean"
        },
        "roles": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "notificationCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Operation": {
      "type": "object",
      "properties": {
        "value": {
          "type": "object"
        },
        "path": {
          "type": "string"
        },
        "op": {
          "type": "string"
        },
        "from": {
          "type": "string"
        }
      }
    },
    "CompanyViewModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "address1": {
          "type": "string"
        },
        "address2": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "zip": {
          "type": "string"
        },
        "billingFirstName": {
          "type": "string"
        },
        "billingLastName": {
          "type": "string"
        },
        "billingPhone": {
          "type": "string"
        },
        "billingEmail": {
          "type": "string"
        }
      }
    },
    "CompanyServiceModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "type": {
          "format": "int32",
          "enum": [
            0,
            1,
            2
          ],
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "fax": {
          "type": "string"
        },
        "address1": {
          "type": "string"
        },
        "address2": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "zip": {
          "type": "string"
        },
        "scacNumber": {
          "type": "string"
        },
        "dotNumber": {
          "type": "string"
        },
        "scacVerified": {
          "type": "boolean"
        },
        "bolPrefix": {
          "type": "string"
        },
        "isEnabled": {
          "type": "boolean"
        },
        "subdomain": {
          "type": "string"
        },
        "isaId": {
          "type": "string"
        },
        "lastUsedBolNumber": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "logo": {
          "$ref": "#/definitions/FileUploadServiceModel"
        },
        "label": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "FileUploadServiceModel": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "size": {
          "format": "int32",
          "type": "integer"
        },
        "type": {
          "type": "string"
        },
        "dataBase64": {
          "type": "string"
        }
      }
    },
    "Query": {
      "type": "object",
      "properties": {
        "navigation": {
          "$ref": "#/definitions/Navigation"
        },
        "order": {
          "$ref": "#/definitions/Order"
        },
        "search": {
          "$ref": "#/definitions/Search"
        },
        "fidelity": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Navigation": {
      "type": "object",
      "properties": {
        "skip": {
          "format": "int32",
          "type": "integer"
        },
        "take": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Order": {
      "type": "object",
      "properties": {
        "by": {
          "type": "string"
        },
        "desc": {
          "type": "boolean"
        }
      }
    },
    "Search": {
      "type": "object",
      "properties": {
        "engineId": {
          "type": "string"
        },
        "filters": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/FilterData"
          }
        }
      }
    },
    "FilterData": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "filterId": {
          "type": "string"
        },
        "jsonValue": {
          "type": "string"
        }
      }
    },
    "QueryResult[CompanyServiceModel]": {
      "type": "object",
      "properties": {
        "total": {
          "format": "int32",
          "type": "integer"
        },
        "result": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/CompanyServiceModel"
          }
        }
      }
    },
    "RegisterCompanyViewModel": {
      "required": [
        "companyName",
        "phone",
        "email",
        "address1",
        "city",
        "state",
        "zip",
        "companyType",
        "password",
        "confirmPassword"
      ],
      "type": "object",
      "properties": {
        "companyName": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "email": {
          "maxLength": 200,
          "minLength": 0,
          "type": "string"
        },
        "address1": {
          "type": "string"
        },
        "address2": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "zip": {
          "type": "string"
        },
        "companyType": {
          "format": "int32",
          "enum": [
            0,
            1,
            2
          ],
          "type": "integer"
        },
        "password": {
          "minLength": 8,
          "type": "string"
        },
        "confirmPassword": {
          "type": "string"
        },
        "bolPrefix": {
          "maxLength": 13,
          "pattern": "^[0-9]*$",
          "type": "string"
        },
        "scacNumber": {
          "type": "string"
        }
      }
    },
    "ResetPasswordViewModel": {
      "required": [
        "email",
        "code"
      ],
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "code": {
          "type": "string"
        },
        "password": {
          "minLength": 8,
          "type": "string"
        },
        "confirmPassword": {
          "type": "string"
        }
      }
    },
    "ConfirmEmailViewModel": {
      "required": [
        "email",
        "code"
      ],
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "code": {
          "type": "string"
        }
      }
    },
    "ForgotPasswordViewModel": {
      "required": [
        "email"
      ],
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        }
      }
    },
    "RoleViewModel": {
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "maxLength": 200,
          "minLength": 2,
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "usersCount": {
          "format": "int32",
          "type": "integer"
        },
        "permissions": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/PermissionViewModel"
          }
        },
        "companyId": {
          "type": "string"
        }
      }
    },
    "PermissionViewModel": {
      "required": [
        "name",
        "value",
        "groupName"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "maxLength": 200,
          "minLength": 2,
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "groupName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "AccountingInvoiceQueryRequest": {
      "type": "object",
      "properties": {
        "driverId": {
          "type": "string"
        },
        "referenceId": {
          "type": "string"
        },
        "participantId": {
          "type": "string"
        },
        "reconcile": {
          "type": "boolean"
        },
        "query": {
          "$ref": "#/definitions/Query"
        }
      }
    },
    "FileStreamResult": {
      "type": "object",
      "properties": {
        "fileStream": {
          "$ref": "#/definitions/Stream"
        },
        "contentType": {
          "type": "string",
          "readOnly": true
        },
        "fileDownloadName": {
          "type": "string"
        },
        "lastModified": {
          "format": "date-time",
          "type": "string"
        },
        "entityTag": {
          "$ref": "#/definitions/EntityTagHeaderValue"
        },
        "enableRangeProcessing": {
          "type": "boolean"
        }
      }
    },
    "Stream": {
      "type": "object",
      "properties": {
        "canRead": {
          "type": "boolean",
          "readOnly": true
        },
        "canSeek": {
          "type": "boolean",
          "readOnly": true
        },
        "canTimeout": {
          "type": "boolean",
          "readOnly": true
        },
        "canWrite": {
          "type": "boolean",
          "readOnly": true
        },
        "length": {
          "format": "int64",
          "type": "integer",
          "readOnly": true
        },
        "position": {
          "format": "int64",
          "type": "integer"
        },
        "readTimeout": {
          "format": "int32",
          "type": "integer"
        },
        "writeTimeout": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "EntityTagHeaderValue": {
      "type": "object",
      "properties": {
        "tag": {
          "$ref": "#/definitions/StringSegment",
          "readOnly": true
        },
        "isWeak": {
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "StringSegment": {
      "type": "object",
      "properties": {
        "buffer": {
          "type": "string",
          "readOnly": true
        },
        "offset": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "length": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "value": {
          "type": "string",
          "readOnly": true
        },
        "hasValue": {
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "SendInvoiceRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "AccountingInvoiceServiceModel": {
      "type": "object",
      "properties": {
        "canSendInvoice": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "participantId": {
          "type": "string"
        },
        "participant": {
          "$ref": "#/definitions/InvoiceParticipantServiceModel"
        },
        "invoiceNumber": {
          "type": "string"
        },
        "referenceType": {
          "type": "string"
        },
        "referenceId": {
          "type": "string"
        },
        "total": {
          "format": "double",
          "type": "number",
          "readOnly": true
        },
        "totalDelta": {
          "format": "double",
          "type": "number",
          "readOnly": true
        },
        "items": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/InvoiceItemServiceModel"
          }
        },
        "reconciled": {
          "type": "boolean"
        },
        "type": {
          "format": "int32",
          "enum": [
            0,
            1
          ],
          "type": "integer"
        },
        "status": {
          "format": "int32",
          "enum": [
            0,
            1,
            2
          ],
          "type": "integer"
        },
        "documentId": {
          "type": "string"
        },
        "to": {
          "$ref": "#/definitions/InvoiceParticipantServiceModel"
        },
        "from": {
          "$ref": "#/definitions/InvoiceParticipantServiceModel"
        }
      }
    },
    "InvoiceParticipantServiceModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "zip": {
          "type": "string"
        },
        "referenceId": {
          "type": "string"
        },
        "label": {
          "type": "string",
          "readOnly": true
        },
        "resolved": {
          "type": "boolean"
        },
        "totalUnresolved": {
          "format": "double",
          "type": "number"
        },
        "totalResolved": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "InvoiceItemServiceModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "referenceType": {
          "type": "string"
        },
        "referenceId": {
          "type": "string"
        },
        "accountingInvoiceId": {
          "type": "string"
        },
        "accountingInvoice": {
          "$ref": "#/definitions/AccountingInvoiceServiceModel"
        },
        "categoryId": {
          "type": "string"
        },
        "category": {
          "$ref": "#/definitions/InvoiceItemCategoryServiceModel"
        },
        "description": {
          "type": "string"
        },
        "quantity": {
          "format": "int32",
          "type": "integer"
        },
        "amount": {
          "format": "double",
          "type": "number"
        },
        "total": {
          "format": "double",
          "type": "number",
          "readOnly": true
        },
        "participantId": {
          "type": "string"
        },
        "participant": {
          "$ref": "#/definitions/InvoiceParticipantServiceModel"
        },
        "type": {
          "format": "int32",
          "enum": [
            0,
            1
          ],
          "type": "integer"
        }
      }
    },
    "InvoiceItemCategoryServiceModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "key": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "QueryResult[AccountingInvoiceServiceModel]": {
      "type": "object",
      "properties": {
        "total": {
          "format": "int32",
          "type": "integer"
        },
        "result": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountingInvoiceServiceModel"
          }
        }
      }
    },
    "Document": {
      "type": "object",
      "properties": {
        "hash": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "AuditTrailQueryRequest": {
      "type": "object",
      "properties": {
        "referenceId": {
          "type": "string"
        },
        "query": {
          "$ref": "#/definitions/Query"
        }
      }
    },
    "QueryResult[AuditTrailServiceModel]": {
      "type": "object",
      "properties": {
        "total": {
          "format": "int32",
          "type": "integer"
        },
        "result": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/AuditTrailServiceModel"
          }
        }
      }
    },
    "AuditTrailServiceModel": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        },
        "user": {
          "$ref": "#/definitions/UserServiceModel"
        },
        "action": {
          "type": "string"
        },
        "date": {
          "format": "date-time",
          "type": "string"
        },
        "referenceId": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "UserServiceModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "jobTitle": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "fullName": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string"
        },
        "userName": {
          "type": "string"
        },
        "label": {
          "type": "string",
          "readOnly": true
        },
        "isEnabled": {
          "type": "boolean"
        }
      }
    },
    "BrokerQueryRequest": {
      "type": "object",
      "properties": {
        "query": {
          "$ref": "#/definitions/Query"
        }
      }
    },
    "QueryResult[BrokerServiceModel]": {
      "type": "object",
      "properties": {
        "total": {
          "format": "int32",
          "type": "integer"
        },
        "result": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/BrokerServiceModel"
          }
        }
      }
    },
    "BrokerServiceModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "companyId": {
          "type": "string"
        },
        "company": {
          "$ref": "#/definitions/CompanyServiceModel"
        },
        "name": {
          "type": "string"
        },
        "isActive": {
          "type": "boolean"
        },
        "label": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "CarrierQueryRequest": {
      "type": "object",
      "properties": {
        "query": {
          "$ref": "#/definitions/Query"
        }
      }
    },
    "QueryResult[CarrierServiceModel]": {
      "type": "object",
      "properties": {
        "total": {
          "format": "int32",
          "type": "integer"
        },
        "result": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/CarrierServiceModel"
          }
        }
      }
    },
    "CarrierServiceModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "companyId": {
          "type": "string"
        },
        "company": {
          "$ref": "#/definitions/CompanyServiceModel"
        },
        "name": {
          "type": "string"
        },
        "scac": {
          "type": "string"
        },
        "quoteMakerEmail": {
          "type": "string"
        },
        "decisionMakerPhoneNumber": {
          "type": "string"
        },
        "decisionMakerEmail": {
          "type": "string"
        },
        "isActive": {
          "type": "boolean"
        },
        "label": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "CommodityTypeQueryRequest": {
      "type": "object",
      "properties": {
        "query": {
          "$ref": "#/definitions/Query"
        }
      }
    },
    "QueryResult[CommodityTypeServiceModel]": {
      "type": "object",
      "properties": {
        "total": {
          "format": "int32",
          "type": "integer"
        },
        "result": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommodityTypeServiceModel"
          }
        }
      }
    },
    "CommodityTypeServiceModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "category": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "label": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "CompanyQueryRequest": {
      "type": "object",
      "properties": {
        "query": {
          "$ref": "#/definitions/Query"
        }
      }
    },
    "DocumentQueryRequest": {
      "type": "object",
      "properties": {
        "referenceId": {
          "type": "string"
        },
        "query": {
          "$ref": "#/definitions/Query"
        }
      }
    },
    "QueryResult[DocumentServiceModel]": {
      "type": "object",
      "properties": {
        "total": {
          "format": "int32",
          "type": "integer"
        },
        "result": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/DocumentServiceModel"
          }
        }
      }
    },
    "DocumentServiceModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "providerName": {
          "type": "string"
        },
        "documentName": {
          "type": "string"
        },
        "signatures": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/RequiredSignatureServiceModel"
          }
        },
        "base64": {
          "type": "string"
        },
        "referenceId": {
          "type": "string"
        }
      }
    },
    "RequiredSignatureServiceModel": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "isSigned": {
          "type": "boolean"
        },
        "canSign": {
          "type": "boolean"
        }
      }
    },
    "DriverQueryRequest": {
      "type": "object",
      "properties": {
        "query": {
          "$ref": "#/definitions/Query"
        }
      }
    },
    "QueryResult[DriverServiceModel]": {
      "type": "object",
      "properties": {
        "total": {
          "format": "int32",
          "type": "integer"
        },
        "result": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/DriverServiceModel"
          }
        }
      }
    },
    "DriverServiceModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        },
        "user": {
          "$ref": "#/definitions/UserServiceModel"
        },
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "licenseNumber": {
          "type": "string"
        },
        "licenseState": {
          "type": "string"
        },
        "notes": {
          "type": "string"
        },
        "currentVehicleId": {
          "type": "string"
        },
        "currentVehicle": {
          "$ref": "#/definitions/VehicleServiceModel"
        },
        "insuranceValid": {
          "type": "boolean"
        },
        "archived": {
          "type": "boolean"
        },
        "payrollType": {
          "format": "int32",
          "enum": [
            0,
            1
          ],
          "type": "integer"
        },
        "payrollRate": {
          "format": "double",
          "type": "number"
        },
        "invoiceItemCategoryId": {
          "type": "string"
        },
        "invoiceItemCategory": {
          "$ref": "#/definitions/InvoiceItemCategoryServiceModel"
        },
        "externalIds": {
          "$ref": "#/definitions/ExternalIds"
        },
        "label": {
          "type": "string",
          "readOnly": true
        },
        "currentLocation": {
          "$ref": "#/definitions/TrackingLocationServiceModel"
        }
      }
    },
    "VehicleServiceModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "vin": {
          "type": "string"
        },
        "engineHours": {
          "type": "string"
        },
        "odometerMeters": {
          "type": "string"
        },
        "currentLocation": {
          "$ref": "#/definitions/TrackingLocationServiceModel"
        },
        "note": {
          "type": "string"
        },
        "companyId": {
          "type": "string"
        },
        "label": {
          "type": "string",
          "readOnly": true
        },
        "externalIds": {
          "$ref": "#/definitions/ExternalIds"
        }
      }
    },
    "ExternalIds": {
      "type": "object",
      "properties": {
        "samsaraId": {
          "type": "string"
        }
      }
    },
    "TrackingLocationServiceModel": {
      "type": "object",
      "properties": {
        "lat": {
          "format": "double",
          "type": "number"
        },
        "lng": {
          "format": "double",
          "type": "number"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "DriverSafetyServiceModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "driverId": {
          "type": "string"
        },
        "crashCount": {
          "format": "int32",
          "type": "integer"
        },
        "harshAccelCount": {
          "format": "int32",
          "type": "integer"
        },
        "harshBrakingCount": {
          "format": "int32",
          "type": "integer"
        },
        "harshTurningCount": {
          "format": "int32",
          "type": "integer"
        },
        "safetyScore": {
          "format": "int32",
          "type": "integer"
        },
        "safetyScoreRank": {
          "format": "int32",
          "type": "integer"
        },
        "timeOverSpeedLimitMs": {
          "format": "int64",
          "type": "integer"
        },
        "totalDistanceDrivenMeters": {
          "format": "int64",
          "type": "integer"
        },
        "totalHarshEventCount": {
          "format": "int32",
          "type": "integer"
        },
        "totalTimeDrivenMs": {
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "EdiConfigQueryRequest": {
      "type": "object",
      "properties": {
        "query": {
          "$ref": "#/definitions/Query"
        }
      }
    },
    "QueryResult[EdiConfigServiceModel]": {
      "type": "object",
      "properties": {
        "total": {
          "format": "int32",
          "type": "integer"
        },
        "result": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/EdiConfigServiceModel"
          }
        }
      }
    },
    "EdiConfigServiceModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "rsaKey": {
          "type": "string"
        },
        "companyId": {
          "type": "string"
        },
        "company": {
          "$ref": "#/definitions/CompanyServiceModel"
        }
      }
    },
    "EdiMessageLogQueryRequest": {
      "type": "object",
      "properties": {
        "referenceId": {
          "type": "string"
        },
        "query": {
          "$ref": "#/definitions/Query"
        }
      }
    },
    "QueryResult[EdiMessageLogServiceModel]": {
      "type": "object",
      "properties": {
        "total": {
          "format": "int32",
          "type": "integer"
        },
        "result": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/EdiMessageLogServiceModel"
          }
        }
      }
    },
    "EdiMessageLogServiceModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "referenceId": {
          "type": "string"
        },
        "type": {
          "format": "int32",
          "enum": [
            0,
            1
          ],
          "type": "integer"
        },
        "status": {
          "format": "int32",
          "enum": [
            0,
            1,
            2
          ],
          "type": "integer"
        },
        "ediTypeNumber": {
          "type": "string"
        },
        "messageTypeName": {
          "type": "string"
        },
        "tradingChannelId": {
          "type": "string"
        },
        "tradingChannel": {
          "$ref": "#/definitions/TradingChannelServiceModel"
        },
        "tradingPartnerId": {
          "type": "string"
        },
        "tradingPartner": {
          "$ref": "#/definitions/TradingPartnerServiceModel"
        },
        "content": {
          "type": "string"
        },
        "errorMessage": {
          "type": "string"
        }
      }
    },
    "TradingChannelServiceModel": {
      "type": "object",
      "properties": {
        "canInviteNewPartner": {
          "type": "boolean"
        },
        "canGenerateKeys": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "uri": {
          "type": "string"
        },
        "privateKey": {
          "type": "string"
        },
        "publicKey": {
          "type": "string"
        },
        "label": {
          "type": "string",
          "readOnly": true
        },
        "password": {
          "type": "string"
        }
      }
    },
    "TradingPartnerServiceModel": {
      "type": "object",
      "properties": {
        "canSendTestMessage": {
          "type": "boolean"
        },
        "channelId": {
          "type": "string"
        },
        "channel": {
          "$ref": "#/definitions/TradingChannelServiceModel"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "address1": {
          "type": "string"
        },
        "address2": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "zip": {
          "type": "string"
        },
        "scacNumber": {
          "type": "string"
        },
        "dotNumber": {
          "type": "string"
        },
        "isaId": {
          "type": "string"
        },
        "as2Enabled": {
          "type": "boolean"
        },
        "uri": {
          "type": "string"
        },
        "partnerPublicKey": {
          "type": "string"
        },
        "encrypt": {
          "type": "boolean"
        },
        "sign": {
          "type": "boolean"
        },
        "label": {
          "type": "string",
          "readOnly": true
        },
        "testMode": {
          "type": "boolean"
        },
        "requestAck": {
          "type": "boolean"
        },
        "currentControlNumber": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "EdiTenderQueryRequest": {
      "type": "object",
      "properties": {
        "query": {
          "$ref": "#/definitions/Query"
        }
      }
    },
    "QueryResult[EdiTenderServiceModel]": {
      "type": "object",
      "properties": {
        "total": {
          "format": "int32",
          "type": "integer"
        },
        "result": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/EdiTenderServiceModel"
          }
        }
      }
    },
    "EdiTenderServiceModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "controlNumber": {
          "type": "string"
        },
        "scac": {
          "type": "string"
        },
        "billOfLading": {
          "type": "string"
        },
        "shipmentOwnerId": {
          "type": "string"
        },
        "loadTenderType": {
          "type": "string"
        },
        "methodOfPayment": {
          "format": "int32",
          "type": "integer"
        },
        "tenderDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "totalWeight": {
          "format": "int32",
          "type": "integer"
        },
        "totalQuantity": {
          "format": "int32",
          "type": "integer"
        },
        "totalCharges": {
          "format": "int32",
          "type": "integer"
        },
        "notes": {
          "type": "string"
        },
        "equipmentNumber": {
          "type": "string"
        },
        "referenceInfo": {
          "type": "string"
        },
        "entityCode": {
          "type": "string"
        },
        "entityName": {
          "type": "string"
        },
        "locationCode": {
          "type": "string"
        },
        "ediDocument": {
          "type": "string"
        },
        "stops": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/EdiTenderStopServiceModel"
          }
        },
        "from": {
          "$ref": "#/definitions/EdiTenderStopServiceModel",
          "readOnly": true
        },
        "to": {
          "$ref": "#/definitions/EdiTenderStopServiceModel",
          "readOnly": true
        },
        "status": {
          "format": "int32",
          "enum": [
            0,
            1,
            2
          ],
          "type": "integer"
        },
        "shipmentId": {
          "type": "string"
        }
      }
    },
    "EdiTenderStopServiceModel": {
      "type": "object",
      "properties": {
        "stopIndex": {
          "format": "int32",
          "type": "integer"
        },
        "stopReason": {
          "format": "int32",
          "type": "integer"
        },
        "date": {
          "format": "date-time",
          "type": "string"
        },
        "entityCode": {
          "type": "string"
        },
        "entityName": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "zip": {
          "type": "string"
        },
        "locationCode": {
          "type": "string"
        },
        "stopWeight": {
          "type": "string"
        },
        "stopQuantity": {
          "type": "string"
        },
        "stopVolume": {
          "type": "string"
        },
        "oidReference": {
          "type": "string"
        },
        "oidPoNumber": {
          "type": "string"
        },
        "oidReference2": {
          "type": "string"
        }
      }
    },
    "EquipmentQueryRequest": {
      "type": "object",
      "properties": {
        "query": {
          "$ref": "#/definitions/Query"
        }
      }
    },
    "QueryResult[EquipmentServiceModel]": {
      "type": "object",
      "properties": {
        "total": {
          "format": "int32",
          "type": "integer"
        },
        "result": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/EquipmentServiceModel"
          }
        }
      }
    },
    "EquipmentServiceModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "number": {
          "type": "string"
        },
        "equipmentNumberCheckDigit": {
          "type": "string"
        },
        "weight": {
          "format": "double",
          "type": "number"
        },
        "weightTypeCodeId": {
          "type": "string",
          "readOnly": true
        },
        "equipmentTypeCodeId": {
          "type": "string"
        },
        "equipmentTypeCode": {
          "$ref": "#/definitions/EquipmentTypeServiceModel"
        },
        "label": {
          "type": "string",
          "readOnly": true
        },
        "ownerScacNumber": {
          "type": "string"
        }
      }
    },
    "EquipmentTypeServiceModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "category": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "label": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "EquipmentLengthQueryRequest": {
      "type": "object",
      "properties": {
        "query": {
          "$ref": "#/definitions/Query"
        }
      }
    },
    "QueryResult[EquipmentLengthServiceModel]": {
      "type": "object",
      "properties": {
        "total": {
          "format": "int32",
          "type": "integer"
        },
        "result": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/EquipmentLengthServiceModel"
          }
        }
      }
    },
    "EquipmentLengthServiceModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "category": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "label": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "EquipmentTypeQueryRequest": {
      "type": "object",
      "properties": {
        "query": {
          "$ref": "#/definitions/Query"
        }
      }
    },
    "QueryResult[EquipmentTypeServiceModel]": {
      "type": "object",
      "properties": {
        "total": {
          "format": "int32",
          "type": "integer"
        },
        "result": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/EquipmentTypeServiceModel"
          }
        }
      }
    },
    "HandlingUnitQueryRequest": {
      "type": "object",
      "properties": {
        "query": {
          "$ref": "#/definitions/Query"
        }
      }
    },
    "QueryResult[HandlingUnitServiceModel]": {
      "type": "object",
      "properties": {
        "total": {
          "format": "int32",
          "type": "integer"
        },
        "result": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/HandlingUnitServiceModel"
          }
        }
      }
    },
    "HandlingUnitServiceModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "QueryResult[InvitationServiceModel]": {
      "type": "object",
      "properties": {
        "total": {
          "format": "int32",
          "type": "integer"
        },
        "result": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/InvitationServiceModel"
          }
        }
      }
    },
    "InvitationServiceModel": {
      "type": "object",
      "properties": {
        "initiatorCompanyName": {
          "type": "string"
        },
        "initiatorCompanyType": {
          "format": "int32",
          "enum": [
            0,
            1,
            2
          ],
          "type": "integer"
        },
        "inviteToCompanyName": {
          "type": "string"
        },
        "inviteToEmail": {
          "type": "string"
        },
        "inviteToCompanyType": {
          "format": "int32",
          "enum": [
            0,
            1,
            2
          ],
          "type": "integer"
        },
        "status": {
          "format": "int32",
          "enum": [
            0,
            1,
            2
          ],
          "type": "integer"
        },
        "isActive": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "initiatorCompanyId": {
          "type": "string"
        },
        "inviteToCompanyId": {
          "type": "string"
        }
      }
    },
    "InvoiceItemQueryRequest": {
      "type": "object",
      "properties": {
        "accountingInvoiceId": {
          "type": "string"
        },
        "referenceId": {
          "type": "string"
        },
        "participantId": {
          "type": "string"
        },
        "resolve": {
          "type": "boolean"
        },
        "query": {
          "$ref": "#/definitions/Query"
        }
      }
    },
    "QueryResult[InvoiceItemServiceModel]": {
      "type": "object",
      "properties": {
        "total": {
          "format": "int32",
          "type": "integer"
        },
        "result": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/InvoiceItemServiceModel"
          }
        }
      }
    },
    "InvoiceItemCategoryQueryRequest": {
      "type": "object",
      "properties": {
        "query": {
          "$ref": "#/definitions/Query"
        }
      }
    },
    "QueryResult[InvoiceItemCategoryServiceModel]": {
      "type": "object",
      "properties": {
        "total": {
          "format": "int32",
          "type": "integer"
        },
        "result": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/InvoiceItemCategoryServiceModel"
          }
        }
      }
    },
    "InvoiceParticipantQueryRequest": {
      "type": "object",
      "properties": {
        "query": {
          "$ref": "#/definitions/Query"
        }
      }
    },
    "QueryResult[InvoiceParticipantServiceModel]": {
      "type": "object",
      "properties": {
        "total": {
          "format": "int32",
          "type": "integer"
        },
        "result": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/InvoiceParticipantServiceModel"
          }
        }
      }
    },
    "LadingItemQueryRequest": {
      "type": "object",
      "properties": {
        "query": {
          "$ref": "#/definitions/Query"
        }
      }
    },
    "QueryResult[LadingItemServiceModel]": {
      "type": "object",
      "properties": {
        "total": {
          "format": "int32",
          "type": "integer"
        },
        "result": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/LadingItemServiceModel"
          }
        }
      }
    },
    "LadingItemServiceModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "orderItemId": {
          "type": "string"
        },
        "typeId": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/OrderItemReferenceNumberTypeServiceModel"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "OrderItemReferenceNumberTypeServiceModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "key": {
          "type": "string"
        },
        "label": {
          "type": "string"
        }
      }
    },
    "LineItemTypeQueryRequest": {
      "type": "object",
      "properties": {
        "query": {
          "$ref": "#/definitions/Query"
        }
      }
    },
    "QueryResult[LineItemTypeServiceModel]": {
      "type": "object",
      "properties": {
        "total": {
          "format": "int32",
          "type": "integer"
        },
        "result": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/LineItemTypeServiceModel"
          }
        }
      }
    },
    "LineItemTypeServiceModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "category": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "LoadSizeQueryRequest": {
      "type": "object",
      "properties": {
        "query": {
          "$ref": "#/definitions/Query"
        }
      }
    },
    "QueryResult[LoadSizeServiceModel]": {
      "type": "object",
      "properties": {
        "total": {
          "format": "int32",
          "type": "integer"
        },
        "result": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/LoadSizeServiceModel"
          }
        }
      }
    },
    "LoadSizeServiceModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "category": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "NmfcClassQueryRequest": {
      "type": "object",
      "properties": {
        "query": {
          "$ref": "#/definitions/Query"
        }
      }
    },
    "QueryResult[NmfcClassServiceModel]": {
      "type": "object",
      "properties": {
        "total": {
          "format": "int32",
          "type": "integer"
        },
        "result": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/NmfcClassServiceModel"
          }
        }
      }
    },
    "NmfcClassServiceModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "NmfcNumberQueryRequest": {
      "type": "object",
      "properties": {
        "query": {
          "$ref": "#/definitions/Query"
        }
      }
    },
    "QueryResult[NmfcNumberServiceModel]": {
      "type": "object",
      "properties": {
        "total": {
          "format": "int32",
          "type": "integer"
        },
        "result": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/NmfcNumberServiceModel"
          }
        }
      }
    },
    "NmfcNumberServiceModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "number": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "OrderItemQueryRequest": {
      "type": "object",
      "properties": {
        "shipmentId": {
          "type": "string"
        },
        "stopId": {
          "type": "string"
        },
        "query": {
          "$ref": "#/definitions/Query"
        }
      }
    },
    "QueryResult[OrderItemServiceModel]": {
      "type": "object",
      "properties": {
        "total": {
          "format": "int32",
          "type": "integer"
        },
        "result": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderItemServiceModel"
          }
        }
      }
    },
    "OrderItemServiceModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "shipmentId": {
          "type": "string"
        },
        "stopId": {
          "type": "string"
        },
        "stop": {
          "$ref": "#/definitions/StopServiceModel"
        },
        "purchaseOrderNumber": {
          "type": "string"
        },
        "handlingUnitId": {
          "type": "string"
        },
        "handlingUnit": {
          "$ref": "#/definitions/HandlingUnitServiceModel"
        },
        "quantity": {
          "format": "int32",
          "type": "integer"
        },
        "weightUnitCodeId": {
          "type": "string",
          "readOnly": true
        },
        "weight": {
          "format": "double",
          "type": "number"
        },
        "volumeUnitCodeId": {
          "type": "string",
          "readOnly": true
        },
        "volume": {
          "format": "double",
          "type": "number"
        },
        "ladingItems": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/LadingItemServiceModel"
          }
        }
      }
    },
    "StopServiceModel": {
      "type": "object",
      "properties": {
        "canSendStatusUpdate": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "shipmentId": {
          "type": "string"
        },
        "action": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5
          ],
          "type": "integer"
        },
        "location": {
          "$ref": "#/definitions/AddressServiceModel"
        },
        "dateScheduledStart": {
          "format": "date-time",
          "type": "string"
        },
        "dateScheduledEnd": {
          "format": "date-time",
          "type": "string"
        },
        "distance": {
          "format": "double",
          "type": "number"
        },
        "driverInstructions": {
          "type": "string"
        },
        "locationNotes": {
          "type": "string"
        },
        "duration": {
          "$ref": "#/definitions/DurationServiceModel"
        },
        "updates": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/StopUpdateServiceModel"
          }
        },
        "isExpanded": {
          "type": "boolean"
        },
        "availableStatusCodes": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ShipmentStatusCodeServiceModel"
          }
        },
        "lastStatusCodeId": {
          "type": "string"
        },
        "lastStatusCode": {
          "$ref": "#/definitions/ShipmentStatusCodeServiceModel"
        },
        "isCurrentStop": {
          "type": "boolean"
        },
        "orderItems": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderItemServiceModel"
          }
        },
        "equipmentItems": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/StopEquipmentItemServiceModel"
          }
        },
        "label": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "AddressServiceModel": {
      "type": "object",
      "properties": {
        "idNumber": {
          "type": "string"
        },
        "formatted": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string"
        },
        "lat": {
          "format": "double",
          "type": "number"
        },
        "lng": {
          "format": "double",
          "type": "number"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "line1": {
          "type": "string"
        },
        "line2": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "zip": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "fob": {
          "type": "boolean"
        },
        "contactName": {
          "type": "string"
        }
      }
    },
    "DurationServiceModel": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string"
        },
        "text": {
          "type": "string"
        },
        "timeZone": {
          "type": "string"
        }
      }
    },
    "StopUpdateServiceModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "stopId": {
          "type": "string"
        },
        "statusCodeId": {
          "type": "string"
        },
        "statusCode": {
          "$ref": "#/definitions/ShipmentStatusCodeServiceModel"
        },
        "statusUpdateTypeId": {
          "type": "string"
        },
        "statusUpdateType": {
          "$ref": "#/definitions/ShipmentStatusUpdateTypeServiceModel"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "driverId": {
          "type": "string"
        },
        "driver": {
          "$ref": "#/definitions/DriverServiceModel"
        },
        "lat": {
          "format": "double",
          "type": "number"
        },
        "lng": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "ShipmentStatusCodeServiceModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "key": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "statusCodeFor": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7
          ],
          "type": "integer"
        },
        "sequenceGroup": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "StopEquipmentItemServiceModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "shipmentId": {
          "type": "string"
        },
        "stopId": {
          "type": "string"
        },
        "stop": {
          "$ref": "#/definitions/StopServiceModel"
        },
        "equipmentId": {
          "type": "string"
        },
        "equipment": {
          "$ref": "#/definitions/EquipmentServiceModel"
        }
      }
    },
    "ShipmentStatusUpdateTypeServiceModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "key": {
          "type": "string"
        },
        "label": {
          "type": "string"
        }
      }
    },
    "OrderItemReferenceNumberTypeQueryRequest": {
      "type": "object",
      "properties": {
        "query": {
          "$ref": "#/definitions/Query"
        }
      }
    },
    "QueryResult[OrderItemReferenceNumberTypeServiceModel]": {
      "type": "object",
      "properties": {
        "total": {
          "format": "int32",
          "type": "integer"
        },
        "result": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderItemReferenceNumberTypeServiceModel"
          }
        }
      }
    },
    "PackageTypeQueryRequest": {
      "type": "object",
      "properties": {
        "query": {
          "$ref": "#/definitions/Query"
        }
      }
    },
    "QueryResult[PackageTypeServiceModel]": {
      "type": "object",
      "properties": {
        "total": {
          "format": "int32",
          "type": "integer"
        },
        "result": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/PackageTypeServiceModel"
          }
        }
      }
    },
    "PackageTypeServiceModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "PermissionQueryRequest": {
      "type": "object",
      "properties": {
        "roleId": {
          "type": "string"
        },
        "query": {
          "$ref": "#/definitions/Query"
        }
      }
    },
    "QueryResult[PermissionServiceModel]": {
      "type": "object",
      "properties": {
        "total": {
          "format": "int32",
          "type": "integer"
        },
        "result": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/PermissionServiceModel"
          }
        }
      }
    },
    "PermissionServiceModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "groupName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "label": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "AddUserRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "serviceModel": {
          "$ref": "#/definitions/AddUserServiceModel"
        }
      }
    },
    "AddUserServiceModel": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        },
        "user": {
          "$ref": "#/definitions/UserServiceModel"
        }
      }
    },
    "RoleServiceModel": {
      "type": "object",
      "properties": {
        "canAddUser": {
          "type": "boolean"
        },
        "canAddPermission": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "usersCount": {
          "format": "int32",
          "type": "integer"
        },
        "label": {
          "type": "string",
          "readOnly": true
        },
        "roleClaims": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/RoleClaimServiceModel"
          }
        }
      }
    },
    "RoleClaimServiceModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "roleId": {
          "type": "string"
        },
        "role": {
          "$ref": "#/definitions/RoleServiceModel"
        },
        "claimType": {
          "type": "string"
        },
        "claimValue": {
          "type": "string"
        }
      }
    },
    "AddPermissionRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "serviceModel": {
          "$ref": "#/definitions/AddPermissionServiceModel"
        }
      }
    },
    "AddPermissionServiceModel": {
      "type": "object",
      "properties": {
        "permissionId": {
          "type": "string"
        },
        "permission": {
          "$ref": "#/definitions/PermissionServiceModel"
        }
      }
    },
    "RoleQueryRequest": {
      "type": "object",
      "properties": {
        "query": {
          "$ref": "#/definitions/Query"
        }
      }
    },
    "QueryResult[RoleServiceModel]": {
      "type": "object",
      "properties": {
        "total": {
          "format": "int32",
          "type": "integer"
        },
        "result": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/RoleServiceModel"
          }
        }
      }
    },
    "RoleClaimQueryRequest": {
      "type": "object",
      "properties": {
        "roleId": {
          "type": "string"
        },
        "query": {
          "$ref": "#/definitions/Query"
        }
      }
    },
    "QueryResult[RoleClaimServiceModel]": {
      "type": "object",
      "properties": {
        "total": {
          "format": "int32",
          "type": "integer"
        },
        "result": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/RoleClaimServiceModel"
          }
        }
      }
    },
    "SaferCarrierQueryRequest": {
      "type": "object",
      "properties": {
        "query": {
          "$ref": "#/definitions/Query"
        }
      }
    },
    "QueryResult[SaferCarrierServiceModel]": {
      "type": "object",
      "properties": {
        "total": {
          "format": "int32",
          "type": "integer"
        },
        "result": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/SaferCarrierServiceModel"
          }
        }
      }
    },
    "SaferCarrierServiceModel": {
      "type": "object",
      "properties": {
        "dotNumber": {
          "type": "string"
        },
        "legalName": {
          "type": "string"
        },
        "dbaName": {
          "type": "string"
        },
        "carrierOperation": {
          "type": "string"
        },
        "hm": {
          "type": "boolean"
        },
        "pc": {
          "type": "boolean"
        },
        "physicalStreet": {
          "type": "string"
        },
        "physicalCity": {
          "type": "string"
        },
        "physicalState": {
          "type": "string"
        },
        "physicalZip": {
          "type": "string"
        },
        "physicalCountry": {
          "type": "string"
        },
        "mailingStreet": {
          "type": "string"
        },
        "mailingCity": {
          "type": "string"
        },
        "mailingState": {
          "type": "string"
        },
        "mailingZip": {
          "type": "string"
        },
        "mailingCountry": {
          "type": "string"
        },
        "telephone": {
          "type": "string"
        },
        "fax": {
          "type": "string"
        },
        "emailAddress": {
          "type": "string"
        },
        "mcs150Date": {
          "type": "string"
        },
        "mcs150Mileage": {
          "type": "string"
        },
        "mcs150MileageYear": {
          "type": "string"
        },
        "addDate": {
          "type": "string"
        },
        "oicState": {
          "type": "string"
        },
        "numberPowerUnit": {
          "type": "string"
        },
        "driverTotal": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "SamsaraConfigServiceModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "apiKey": {
          "type": "string"
        },
        "groupId": {
          "type": "string"
        },
        "emailDomain": {
          "type": "string"
        },
        "syncDrivers": {
          "type": "boolean"
        },
        "payrollType": {
          "format": "int32",
          "enum": [
            0,
            1
          ],
          "type": "integer"
        },
        "payrollRate": {
          "format": "double",
          "type": "number"
        },
        "invoiceItemCategoryId": {
          "type": "string"
        },
        "invoiceItemCategory": {
          "$ref": "#/definitions/InvoiceItemCategoryServiceModel"
        }
      }
    },
    "AcceptShipmentRequest": {
      "type": "object",
      "properties": {
        "actionName": {
          "type": "string",
          "readOnly": true
        },
        "referenceId": {
          "type": "string",
          "readOnly": true
        },
        "id": {
          "type": "string"
        }
      }
    },
    "ShipmentServiceModel": {
      "type": "object",
      "properties": {
        "canRefreshPartners": {
          "type": "boolean"
        },
        "canAccept": {
          "type": "boolean"
        },
        "canDecline": {
          "type": "boolean"
        },
        "canBegin": {
          "type": "boolean"
        },
        "canComplete": {
          "type": "boolean"
        },
        "canCancel": {
          "type": "boolean"
        },
        "canEditTrackingSettings": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "currentStopId": {
          "type": "string"
        },
        "currentStop": {
          "$ref": "#/definitions/StopServiceModel"
        },
        "respondBy": {
          "format": "date-time",
          "type": "string"
        },
        "trackingSettings": {
          "$ref": "#/definitions/TrackingSettingsServiceModel"
        },
        "currentShipmentStatusCodeId": {
          "type": "string"
        },
        "currentShipmentStatusCode": {
          "$ref": "#/definitions/ShipmentStatusCodeServiceModel"
        },
        "trackingLocations": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/TrackingLocationServiceModel"
          }
        },
        "shipmentIdentificationNumber": {
          "type": "string"
        },
        "status": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10
          ],
          "type": "integer"
        },
        "mode": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5
          ],
          "type": "integer"
        },
        "shipFrom": {
          "$ref": "#/definitions/AddressServiceModel"
        },
        "targetPickupTimeStart": {
          "format": "date-time",
          "type": "string"
        },
        "targetPickupTimeEnd": {
          "format": "date-time",
          "type": "string"
        },
        "shipTo": {
          "$ref": "#/definitions/AddressServiceModel"
        },
        "targetDeliveryTimeStart": {
          "format": "date-time",
          "type": "string"
        },
        "targetDeliveryTimeEnd": {
          "format": "date-time",
          "type": "string"
        },
        "thirdPartyBillTo": {
          "$ref": "#/definitions/AddressServiceModel"
        },
        "late": {
          "type": "boolean"
        },
        "isSubscribed": {
          "type": "boolean"
        },
        "lastStatusChange": {
          "format": "date-time",
          "type": "string"
        },
        "bookingStartedTimestamp": {
          "format": "date-time",
          "type": "string"
        },
        "dispatchTimestamp": {
          "format": "date-time",
          "type": "string"
        },
        "pickupTimestamp": {
          "format": "date-time",
          "type": "string"
        },
        "lastDispatchQuery": {
          "format": "date-time",
          "type": "string"
        },
        "leaveTime": {
          "format": "date-time",
          "type": "string"
        },
        "tripTotalMilliseconds": {
          "format": "double",
          "type": "number"
        },
        "createdOn": {
          "format": "date-time",
          "type": "string"
        },
        "lastModifiedOn": {
          "format": "date-time",
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/UserServiceModel"
        },
        "lastModifiedBy": {
          "$ref": "#/definitions/UserServiceModel"
        },
        "fromPartnerId": {
          "type": "string"
        },
        "fromPartner": {
          "$ref": "#/definitions/TradingPartnerServiceModel"
        },
        "toPartnerId": {
          "type": "string"
        },
        "toPartner": {
          "$ref": "#/definitions/TradingPartnerServiceModel"
        },
        "driverId": {
          "type": "string"
        },
        "driver": {
          "$ref": "#/definitions/DriverServiceModel"
        },
        "from": {
          "$ref": "#/definitions/StopServiceModel"
        },
        "to": {
          "$ref": "#/definitions/StopServiceModel"
        },
        "additionalInformation": {
          "$ref": "#/definitions/AdditionalInfoServiceModel"
        },
        "anchorTransaction": {
          "$ref": "#/definitions/AnchorShipmentTransactionServiceModel"
        },
        "pickupInfo": {
          "$ref": "#/definitions/PickupInfoServiceModel"
        },
        "acceptedQuote": {
          "$ref": "#/definitions/BrokerCarrierQuoteServiceModel"
        },
        "carrierQuoteRequest": {
          "$ref": "#/definitions/CarrierQuoteRequestServiceModel"
        },
        "terms": {
          "$ref": "#/definitions/TermsServiceModel"
        },
        "loadInformation": {
          "$ref": "#/definitions/LoadInformationServiceModel"
        },
        "carrierQuotes": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/BrokerCarrierQuoteServiceModel"
          }
        },
        "handlingRequirements": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/HandlingRequirement"
          }
        },
        "parties": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Party"
          }
        },
        "controlNumber": {
          "type": "string"
        },
        "totalDistance": {
          "format": "double",
          "type": "number"
        },
        "canSendUpdates": {
          "type": "boolean"
        },
        "stops": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/StopServiceModel"
          }
        }
      }
    },
    "TrackingSettingsServiceModel": {
      "type": "object",
      "properties": {
        "trackingProvider": {
          "format": "int32",
          "enum": [
            0,
            1,
            2
          ],
          "type": "integer"
        },
        "minutesBetweenTracking": {
          "format": "int32",
          "type": "integer"
        },
        "lastTrackingTime": {
          "format": "date-time",
          "type": "string"
        },
        "lastTrackingNotificationTime": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "AdditionalInfoServiceModel": {
      "type": "object",
      "properties": {
        "customerOrderInformation": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomerOrderServiceModel"
          }
        }
      }
    },
    "AnchorShipmentTransactionServiceModel": {
      "type": "object",
      "properties": {
        "hash": {
          "type": "string"
        },
        "referenceId": {
          "type": "string"
        },
        "transactionId": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "documentBase64": {
          "type": "string"
        }
      }
    },
    "PickupInfoServiceModel": {
      "type": "object",
      "properties": {
        "sealNumbers": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "loadedBy": {
          "format": "int32",
          "enum": [
            0,
            1
          ],
          "type": "integer"
        },
        "countedBy": {
          "format": "int32",
          "enum": [
            0,
            1,
            2
          ],
          "type": "integer"
        },
        "specialInstructions": {
          "type": "string"
        }
      }
    },
    "BrokerCarrierQuoteServiceModel": {
      "type": "object",
      "properties": {
        "carrierCompany": {
          "$ref": "#/definitions/CompanyServiceModel"
        },
        "quotePrice": {
          "format": "double",
          "type": "number"
        },
        "status": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7
          ],
          "type": "integer"
        },
        "terms": {
          "format": "int32",
          "enum": [
            0,
            1
          ],
          "type": "integer"
        },
        "requestedTimestamp": {
          "format": "date-time",
          "type": "string"
        },
        "responseTimestamp": {
          "format": "date-time",
          "type": "string"
        },
        "additionalInformation": {
          "$ref": "#/definitions/CarrierAdditionalInfoServiceModel"
        },
        "carrierQuoteRequestId": {
          "type": "string"
        },
        "isSubscribed": {
          "type": "boolean"
        },
        "deliveryWindowProbability": {
          "format": "int32",
          "type": "integer"
        },
        "routeProximity": {
          "format": "int32",
          "type": "integer"
        },
        "numberOfDeliveriesToLocation": {
          "format": "int32",
          "type": "integer"
        },
        "incidentsLast30Days": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "CarrierQuoteRequestServiceModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "shipmentId": {
          "type": "string"
        },
        "quotePrice": {
          "format": "double",
          "type": "number"
        },
        "status": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7
          ],
          "type": "integer"
        },
        "requestedTimestamp": {
          "format": "date-time",
          "type": "string"
        },
        "responseTimestamp": {
          "format": "date-time",
          "type": "string"
        },
        "companyId": {
          "type": "string"
        },
        "shipperCompany": {
          "$ref": "#/definitions/CompanyServiceModel"
        },
        "auditTrail": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/AuditTrailServiceModel"
          }
        },
        "terms": {
          "format": "int32",
          "enum": [
            0,
            1
          ],
          "type": "integer"
        },
        "createdBy": {
          "$ref": "#/definitions/UserServiceModel"
        },
        "lastModifiedBy": {
          "$ref": "#/definitions/UserServiceModel"
        },
        "additionalInformation": {
          "$ref": "#/definitions/CarrierAdditionalInfoServiceModel"
        },
        "brokerCompany": {
          "$ref": "#/definitions/CompanyServiceModel"
        },
        "isSubscribed": {
          "type": "boolean"
        },
        "lineItems": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ShipmentFeeServiceModel"
          }
        }
      }
    },
    "TermsServiceModel": {
      "type": "object",
      "properties": {
        "freightChargeTerms": {
          "$ref": "#/definitions/FreightChargeTermsModel"
        },
        "codAmount": {
          "format": "double",
          "type": "number"
        },
        "feeTerms": {
          "$ref": "#/definitions/FeeTermsModel"
        }
      }
    },
    "LoadInformationServiceModel": {
      "type": "object",
      "properties": {
        "carrierInformation": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/CarrierInformationServiceModel"
          }
        },
        "equipmentType": {
          "type": "string"
        },
        "equipmentLength": {
          "type": "string"
        },
        "commodity": {
          "type": "string"
        },
        "weight": {
          "format": "double",
          "type": "number"
        },
        "temperature": {
          "format": "int32",
          "type": "integer"
        },
        "mode": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5
          ],
          "type": "integer"
        }
      }
    },
    "HandlingRequirement": {
      "type": "object",
      "properties": {
        "specialHandlingCode": {
          "type": "string"
        },
        "specialServicesCode": {
          "type": "string"
        },
        "specialHandlingDescription": {
          "type": "string"
        }
      }
    },
    "Party": {
      "type": "object",
      "properties": {
        "n3Items": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/N3"
          }
        },
        "g61Items": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/G61"
          }
        },
        "entityIdentifierCode": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "identificationCodeQualifier": {
          "type": "string"
        },
        "identificationCode": {
          "type": "string"
        },
        "entityRelationshipCode": {
          "type": "string"
        },
        "nameEntityIdentifierCode_06": {
          "type": "string"
        },
        "n2Name_01": {
          "type": "string"
        },
        "n2Name_02": {
          "type": "string"
        },
        "cityName": {
          "type": "string"
        },
        "stateorProvinceCode": {
          "type": "string"
        },
        "postalCode": {
          "type": "string"
        },
        "countryCode": {
          "type": "string"
        },
        "locationQualifier": {
          "type": "string"
        },
        "locationIdentifier": {
          "type": "string"
        },
        "referenceIdentification": {
          "type": "string"
        },
        "referenceIdentificationQualifier": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "CustomerOrderServiceModel": {
      "required": [
        "orderNumber"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "orderNumber": {
          "type": "string"
        },
        "quantity": {
          "format": "int32",
          "maximum": 2147483647.0,
          "minimum": 1.0,
          "type": "integer"
        },
        "weight": {
          "format": "double",
          "type": "number"
        },
        "palletSlip": {
          "type": "boolean"
        },
        "additionalShipperInfo": {
          "type": "string"
        }
      }
    },
    "CarrierAdditionalInfoServiceModel": {
      "type": "object",
      "properties": {
        "proNumber": {
          "type": "string"
        },
        "trailerNumber": {
          "type": "string"
        },
        "paymentByCheckAccepted": {
          "type": "boolean"
        },
        "pickupAppointment": {
          "$ref": "#/definitions/PickupAppointmentServiceModel"
        }
      }
    },
    "ShipmentFeeServiceModel": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "unit": {
          "type": "string"
        },
        "unitPrice": {
          "format": "double",
          "type": "number"
        },
        "quantity": {
          "format": "int32",
          "type": "integer"
        },
        "total": {
          "format": "double",
          "type": "number",
          "readOnly": true
        },
        "editable": {
          "type": "boolean"
        }
      }
    },
    "FreightChargeTermsModel": {
      "type": "object",
      "properties": {
        "collect": {
          "type": "boolean"
        },
        "prepaid": {
          "type": "boolean"
        },
        "thirdParty": {
          "type": "boolean"
        }
      }
    },
    "FeeTermsModel": {
      "type": "object",
      "properties": {
        "collect": {
          "type": "boolean"
        },
        "prepaid": {
          "type": "boolean"
        },
        "customerCheckAvailable": {
          "type": "boolean"
        },
        "shipperSignature": {
          "type": "string"
        },
        "shipperSignDate": {
          "format": "date-time",
          "type": "string"
        },
        "carrierSignature": {
          "type": "string"
        },
        "carrierPickupDate": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "CarrierInformationServiceModel": {
      "required": [
        "handlingUnitType",
        "packageType"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "handlingUnitQty": {
          "format": "int32",
          "maximum": 2147483647.0,
          "minimum": 1.0,
          "type": "integer"
        },
        "handlingUnitType": {
          "type": "string"
        },
        "packageQty": {
          "format": "int32",
          "maximum": 2147483647.0,
          "minimum": 1.0,
          "type": "integer"
        },
        "packageType": {
          "type": "string"
        },
        "weight": {
          "format": "double",
          "type": "number"
        },
        "hm": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "nmfcNumber": {
          "type": "string"
        },
        "nmfcClass": {
          "type": "string"
        }
      }
    },
    "N3": {
      "type": "object",
      "properties": {
        "addressInformation": {
          "type": "string"
        },
        "addressInformation_02": {
          "type": "string"
        }
      }
    },
    "G61": {
      "type": "object",
      "properties": {
        "contactFunctionCode": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "communicationNumberQualifier": {
          "type": "string"
        },
        "communicationNumber": {
          "type": "string"
        },
        "contactInquiryReference": {
          "type": "string"
        }
      }
    },
    "PickupAppointmentServiceModel": {
      "type": "object",
      "properties": {
        "pickupLocation": {
          "$ref": "#/definitions/AddressServiceModel"
        },
        "appointmentTime": {
          "format": "date-time",
          "type": "string"
        },
        "pickupNumber": {
          "type": "string"
        },
        "pickupDetails": {
          "type": "string"
        }
      }
    },
    "BeginRequest": {
      "type": "object",
      "properties": {
        "lat": {
          "format": "double",
          "type": "number"
        },
        "lng": {
          "format": "double",
          "type": "number"
        },
        "actionName": {
          "type": "string",
          "readOnly": true
        },
        "referenceId": {
          "type": "string",
          "readOnly": true
        },
        "id": {
          "type": "string"
        }
      }
    },
    "CompleteRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "RefreshPartnersRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "serviceModel": {
          "$ref": "#/definitions/RefreshPartnersServiceModel"
        }
      }
    },
    "RefreshPartnersServiceModel": {
      "type": "object",
      "properties": {
        "shipmentId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "ShipmentDeclineRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "serviceModel": {
          "$ref": "#/definitions/ShipmentDeclineServiceModel"
        }
      }
    },
    "ShipmentDeclineServiceModel": {
      "type": "object",
      "properties": {
        "reasonCodeId": {
          "type": "string"
        },
        "reasonCode": {
          "$ref": "#/definitions/ShipmentDeclineReasonCodeServiceModel"
        }
      }
    },
    "ShipmentDeclineReasonCodeServiceModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "key": {
          "type": "string"
        },
        "label": {
          "type": "string"
        }
      }
    },
    "ShipmentCancelRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "serviceModel": {
          "$ref": "#/definitions/ShipmentCancelServiceModel"
        }
      }
    },
    "ShipmentCancelServiceModel": {
      "type": "object",
      "properties": {
        "reasonCodeId": {
          "type": "string"
        },
        "reasonCode": {
          "$ref": "#/definitions/ShipmentDeclineReasonCodeServiceModel"
        }
      }
    },
    "TrackingSettingsRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "serviceModel": {
          "$ref": "#/definitions/TrackingSettingsServiceModel"
        }
      }
    },
    "ShipmentQueryRequest": {
      "type": "object",
      "properties": {
        "driverId": {
          "type": "string"
        },
        "query": {
          "$ref": "#/definitions/Query"
        }
      }
    },
    "QueryResult[ShipmentServiceModel]": {
      "type": "object",
      "properties": {
        "total": {
          "format": "int32",
          "type": "integer"
        },
        "result": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ShipmentServiceModel"
          }
        }
      }
    },
    "ShipmentAppointmentStatusCodeQueryRequest": {
      "type": "object",
      "properties": {
        "query": {
          "$ref": "#/definitions/Query"
        }
      }
    },
    "QueryResult[ShipmentAppointmentStatusCodeServiceModel]": {
      "type": "object",
      "properties": {
        "total": {
          "format": "int32",
          "type": "integer"
        },
        "result": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ShipmentAppointmentStatusCodeServiceModel"
          }
        }
      }
    },
    "ShipmentAppointmentStatusCodeServiceModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "key": {
          "type": "string"
        },
        "label": {
          "type": "string"
        }
      }
    },
    "ShipmentConfigServiceModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "generateBillOfLading": {
          "type": "boolean"
        },
        "generateLoadConfirmation": {
          "type": "boolean"
        },
        "generateCarrierInvoice": {
          "type": "boolean"
        },
        "generateBrokerInvoice": {
          "type": "boolean"
        },
        "generateClientInvoice": {
          "type": "boolean"
        },
        "defaultTrackingProvider": {
          "format": "int32",
          "enum": [
            0,
            1,
            2
          ],
          "type": "integer"
        }
      }
    },
    "ShipmentDeclineReasonCodeQueryRequest": {
      "type": "object",
      "properties": {
        "query": {
          "$ref": "#/definitions/Query"
        }
      }
    },
    "QueryResult[ShipmentDeclineReasonCodeServiceModel]": {
      "type": "object",
      "properties": {
        "total": {
          "format": "int32",
          "type": "integer"
        },
        "result": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ShipmentDeclineReasonCodeServiceModel"
          }
        }
      }
    },
    "ShipmentDriverDispatchQueryRequest": {
      "type": "object",
      "properties": {
        "shipmentId": {
          "type": "string"
        },
        "query": {
          "$ref": "#/definitions/Query"
        }
      }
    },
    "QueryResult[ShipmentDriverDispatchServiceModel]": {
      "type": "object",
      "properties": {
        "total": {
          "format": "int32",
          "type": "integer"
        },
        "result": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ShipmentDriverDispatchServiceModel"
          }
        }
      }
    },
    "ShipmentDriverDispatchServiceModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "shipmentId": {
          "type": "string"
        },
        "driverId": {
          "type": "string"
        },
        "driver": {
          "$ref": "#/definitions/DriverServiceModel"
        },
        "shipmentsToCompleteBefore": {
          "format": "int32",
          "type": "integer"
        },
        "estimatedLocationAtDispatch": {
          "$ref": "#/definitions/TrackingLocationServiceModel"
        },
        "estimatedDeadheadMiles": {
          "format": "int32",
          "type": "integer"
        },
        "estimatedDeadheadMeters": {
          "format": "int32",
          "type": "integer"
        },
        "score": {
          "format": "int32",
          "type": "integer"
        },
        "safetyScore": {
          "format": "int32",
          "type": "integer"
        },
        "scoreExplanation": {
          "type": "string"
        },
        "safetyScoreRank": {
          "format": "int32",
          "type": "integer"
        },
        "isAssigned": {
          "type": "boolean"
        },
        "timeBetween": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "ShipmentStatusCodeQueryRequest": {
      "type": "object",
      "properties": {
        "query": {
          "$ref": "#/definitions/Query"
        }
      }
    },
    "QueryResult[ShipmentStatusCodeServiceModel]": {
      "type": "object",
      "properties": {
        "total": {
          "format": "int32",
          "type": "integer"
        },
        "result": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ShipmentStatusCodeServiceModel"
          }
        }
      }
    },
    "ShipmentStatusUpdateTypeQueryRequest": {
      "type": "object",
      "properties": {
        "query": {
          "$ref": "#/definitions/Query"
        }
      }
    },
    "QueryResult[ShipmentStatusUpdateTypeServiceModel]": {
      "type": "object",
      "properties": {
        "total": {
          "format": "int32",
          "type": "integer"
        },
        "result": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ShipmentStatusUpdateTypeServiceModel"
          }
        }
      }
    },
    "SendTenderRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "serviceModel": {
          "$ref": "#/definitions/SendTenderServiceModel"
        }
      }
    },
    "SendTenderServiceModel": {
      "type": "object",
      "properties": {
        "shipmentId": {
          "format": "int32",
          "type": "integer"
        },
        "respondBy": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "ShipmentTradingPartnerServiceModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "shipmentId": {
          "type": "string"
        },
        "canSendTender": {
          "type": "boolean"
        },
        "tradingPartnerId": {
          "type": "string"
        },
        "tradingPartner": {
          "$ref": "#/definitions/TradingPartnerServiceModel"
        },
        "routeProximity": {
          "format": "double",
          "type": "number"
        },
        "status": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4
          ],
          "type": "integer"
        },
        "respondBy": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "ShipmentTradingPartnerQueryRequest": {
      "type": "object",
      "properties": {
        "shipmentId": {
          "type": "string"
        },
        "query": {
          "$ref": "#/definitions/Query"
        }
      }
    },
    "QueryResult[ShipmentTradingPartnerServiceModel]": {
      "type": "object",
      "properties": {
        "total": {
          "format": "int32",
          "type": "integer"
        },
        "result": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ShipmentTradingPartnerServiceModel"
          }
        }
      }
    },
    "ShipperQueryRequest": {
      "type": "object",
      "properties": {
        "query": {
          "$ref": "#/definitions/Query"
        }
      }
    },
    "QueryResult[ShipperServiceModel]": {
      "type": "object",
      "properties": {
        "total": {
          "format": "int32",
          "type": "integer"
        },
        "result": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ShipperServiceModel"
          }
        }
      }
    },
    "ShipperServiceModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "companyId": {
          "type": "string"
        },
        "company": {
          "$ref": "#/definitions/CompanyServiceModel"
        },
        "name": {
          "type": "string"
        },
        "scac": {
          "type": "string"
        },
        "decisionMakerPhoneNumber": {
          "type": "string"
        },
        "decisionMakerEmail": {
          "type": "string"
        },
        "isActive": {
          "type": "boolean"
        },
        "lastBoLNumber": {
          "type": "string"
        },
        "label": {
          "type": "string",
          "readOnly": true
        },
        "ediProtocol": {
          "format": "int32",
          "enum": [
            0,
            1
          ],
          "type": "integer"
        },
        "send204": {
          "type": "boolean"
        }
      }
    },
    "StopStatusUpdateRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "serviceModel": {
          "$ref": "#/definitions/StopStatusUpdateServiceModel"
        }
      }
    },
    "StopStatusUpdateServiceModel": {
      "type": "object",
      "properties": {
        "statusCodeId": {
          "type": "string"
        },
        "statusCode": {
          "$ref": "#/definitions/ShipmentStatusCodeServiceModel"
        },
        "appointmentStatusCodeId": {
          "type": "string"
        },
        "appointmentStatusCode": {
          "$ref": "#/definitions/ShipmentAppointmentStatusCodeServiceModel"
        },
        "statusTypeId": {
          "type": "string"
        },
        "statusType": {
          "$ref": "#/definitions/ShipmentStatusUpdateTypeServiceModel"
        },
        "statusDate": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "StopQueryRequest": {
      "type": "object",
      "properties": {
        "shipmentId": {
          "type": "string"
        },
        "query": {
          "$ref": "#/definitions/Query"
        }
      }
    },
    "QueryResult[StopServiceModel]": {
      "type": "object",
      "properties": {
        "total": {
          "format": "int32",
          "type": "integer"
        },
        "result": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/StopServiceModel"
          }
        }
      }
    },
    "StopEquipmentItemQueryRequest": {
      "type": "object",
      "properties": {
        "shipmentId": {
          "type": "string"
        },
        "stopId": {
          "type": "string"
        },
        "query": {
          "$ref": "#/definitions/Query"
        }
      }
    },
    "QueryResult[StopEquipmentItemServiceModel]": {
      "type": "object",
      "properties": {
        "total": {
          "format": "int32",
          "type": "integer"
        },
        "result": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/StopEquipmentItemServiceModel"
          }
        }
      }
    },
    "StopUpdateQueryRequest": {
      "type": "object",
      "properties": {
        "query": {
          "$ref": "#/definitions/Query"
        }
      }
    },
    "QueryResult[StopUpdateServiceModel]": {
      "type": "object",
      "properties": {
        "total": {
          "format": "int32",
          "type": "integer"
        },
        "result": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/StopUpdateServiceModel"
          }
        }
      }
    },
    "TenderQueryRequest": {
      "type": "object",
      "properties": {
        "query": {
          "$ref": "#/definitions/Query"
        }
      }
    },
    "QueryResult[TenderServiceModel]": {
      "type": "object",
      "properties": {
        "total": {
          "format": "int32",
          "type": "integer"
        },
        "result": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/TenderServiceModel"
          }
        }
      }
    },
    "TenderServiceModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/LoadTenderMessage"
        },
        "tradingPartnerId": {
          "type": "string"
        },
        "tradingPartner": {
          "$ref": "#/definitions/TradingPartnerServiceModel"
        },
        "status": {
          "format": "int32",
          "enum": [
            0,
            1,
            2
          ],
          "type": "integer"
        },
        "shipmentId": {
          "type": "string"
        }
      }
    },
    "LoadTenderMessage": {
      "type": "object",
      "properties": {
        "transactionSetIdentifierCode": {
          "type": "string"
        },
        "transactionSetControlNumber": {
          "type": "string"
        },
        "standardCarrierAlphaCode": {
          "type": "string"
        },
        "shipmentIdentificationNumber": {
          "type": "string"
        },
        "weightUnitCode": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4
          ],
          "type": "integer"
        },
        "paymentMethod": {
          "format": "int32",
          "enum": [
            0,
            1,
            2
          ],
          "type": "integer"
        },
        "transactionSetPurpose": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3
          ],
          "type": "integer"
        },
        "referenceIdentifications": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReferenceIdentification"
          }
        },
        "respondBy": {
          "format": "date-time",
          "type": "string"
        },
        "respondByTimeCode": {
          "type": "string"
        },
        "handlingRequirements": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/BolHandlingRequirements"
          }
        },
        "specialInstructions": {
          "type": "string"
        },
        "parties": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/PartyInfo"
          }
        },
        "equipmentInfos": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/EquipmentInfo"
          }
        },
        "stopInfos": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/StopInfo"
          }
        },
        "weight": {
          "type": "string"
        },
        "weightQualifier": {
          "format": "int32",
          "enum": [
            0
          ],
          "type": "integer"
        },
        "freightRate": {
          "type": "string"
        },
        "charge": {
          "type": "string"
        },
        "advances": {
          "type": "string"
        },
        "prepaidAmount": {
          "type": "string"
        },
        "specialChargeorAllowanceCode": {
          "type": "string"
        },
        "volume": {
          "type": "string"
        },
        "volumeUnitQualifier": {
          "format": "int32",
          "enum": [
            0
          ],
          "type": "integer"
        },
        "ladingQuantity": {
          "type": "string"
        },
        "totalWeightUnitCode": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4
          ],
          "type": "integer"
        },
        "tariffNumber": {
          "type": "string"
        },
        "declaredValue": {
          "type": "string"
        },
        "rateValueQualifier": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5
          ],
          "type": "integer"
        }
      }
    },
    "ReferenceIdentification": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string"
        },
        "qualifier": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14
          ],
          "type": "integer"
        }
      }
    },
    "BolHandlingRequirements": {
      "type": "object",
      "properties": {
        "specialHandlingDescription": {
          "type": "string"
        },
        "specialHandlingCode": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20
          ],
          "type": "integer"
        },
        "specialServicesCode": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9
          ],
          "type": "integer"
        }
      }
    },
    "PartyInfo": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "identificationCode": {
          "type": "string"
        },
        "identificationCodeQualifier": {
          "type": "string"
        },
        "entityIdentifierCode": {
          "type": "string"
        },
        "entityRelationshipCode": {
          "type": "string"
        },
        "addressInfos": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/AddressInfo"
          }
        },
        "contactInfos": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactInfo"
          }
        },
        "cityName": {
          "type": "string"
        },
        "countryCode": {
          "type": "string"
        },
        "stateorProvinceCode": {
          "type": "string"
        },
        "postalCode": {
          "type": "string"
        },
        "locationIdentifier": {
          "type": "string"
        },
        "locationQualifier": {
          "type": "string"
        }
      }
    },
    "EquipmentInfo": {
      "type": "object",
      "properties": {
        "dunnage": {
          "type": "string"
        },
        "height": {
          "type": "string"
        },
        "position": {
          "type": "string"
        },
        "volume": {
          "type": "string"
        },
        "weight": {
          "type": "string"
        },
        "width": {
          "type": "string"
        },
        "equipmentInitial": {
          "type": "string"
        },
        "equipmentNumber": {
          "type": "string"
        },
        "equipmentType": {
          "type": "string"
        },
        "ownershipCode": {
          "type": "string"
        },
        "tareWeight": {
          "type": "string"
        },
        "temperatureControl": {
          "type": "string"
        },
        "weightAllowance": {
          "type": "string"
        },
        "weightQualifier": {
          "format": "int32",
          "enum": [
            0
          ],
          "type": "integer"
        },
        "carTypeCode": {
          "type": "string"
        },
        "equipmentDescriptionCode": {
          "type": "string"
        },
        "tareQualifierCode": {
          "type": "string"
        },
        "typeofServiceCode": {
          "type": "string"
        },
        "volumeUnitQualifier": {
          "type": "string"
        },
        "weightUnitCode": {
          "type": "string"
        },
        "equipmentNumberCheckDigit": {
          "type": "string"
        },
        "standardCarrierAlphaCode": {
          "type": "string"
        },
        "standardCarrierAlphaCode2": {
          "type": "string"
        }
      }
    },
    "StopInfo": {
      "type": "object",
      "properties": {
        "addressInfo": {
          "$ref": "#/definitions/LocationInfo"
        },
        "notes": {
          "type": "string"
        },
        "numberOfPalletsShipped": {
          "type": "string"
        },
        "loadInformation": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/LoadInformation"
          }
        },
        "timeInfos": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/TimeInfo"
          }
        },
        "ladingInfo": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/LadingInfo"
          }
        },
        "referenceIdentifications": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReferenceIdentification"
          }
        },
        "stopSequenceNumber": {
          "type": "string"
        },
        "stopReasonCode": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5
          ],
          "type": "integer"
        },
        "weight": {
          "type": "string"
        },
        "weightUnitCode": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4
          ],
          "type": "integer"
        },
        "numberofUnitsShipped": {
          "type": "string"
        },
        "unitorBasisforMeasurementCode": {
          "type": "string"
        },
        "volume": {
          "type": "string"
        },
        "volumeUnitQualifier": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "standardPointLocationCode": {
          "type": "string"
        },
        "accomplishCode": {
          "type": "string"
        }
      }
    },
    "AddressInfo": {
      "type": "object",
      "properties": {
        "addressLine1": {
          "type": "string"
        },
        "addressLine2": {
          "type": "string"
        }
      }
    },
    "ContactInfo": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "communicationNumberQualifier": {
          "type": "string"
        },
        "communicationNumber": {
          "type": "string"
        },
        "contactFunctionCode": {
          "type": "string"
        },
        "contactInquiryReference": {
          "type": "string"
        }
      }
    },
    "LocationInfo": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "identificationCode": {
          "type": "string"
        },
        "identificationCodeQualifier": {
          "type": "string"
        },
        "entityIdentifierCode": {
          "type": "string"
        },
        "entityRelationshipCode": {
          "type": "string"
        },
        "addressInfos": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/AddressInfo"
          }
        },
        "contactInfos": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactInfo"
          }
        },
        "cityName": {
          "type": "string"
        },
        "countryCode": {
          "type": "string"
        },
        "stateorProvinceCode": {
          "type": "string"
        },
        "postalCode": {
          "type": "string"
        },
        "locationIdentifier": {
          "type": "string"
        },
        "locationQualifier": {
          "type": "string"
        }
      }
    },
    "LoadInformation": {
      "type": "object",
      "properties": {
        "loadContactInfo": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/LoadContactInfo"
          }
        },
        "weightQualifier": {
          "format": "int32",
          "enum": [
            0
          ],
          "type": "integer"
        },
        "weightUnitCode": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4
          ],
          "type": "integer"
        },
        "weight": {
          "type": "string"
        },
        "ladingQuantity": {
          "type": "string"
        },
        "handlingUnitQuantity": {
          "type": "string"
        },
        "volumeUnitQualifier": {
          "type": "string"
        },
        "volume": {
          "type": "string"
        },
        "ladingDescription": {
          "type": "string"
        },
        "commodityCode": {
          "type": "string"
        },
        "commodityCodeQualifier": {
          "type": "string"
        },
        "ladingLineItemNumber": {
          "type": "string"
        },
        "packagingCode": {
          "type": "string"
        }
      }
    },
    "TimeInfo": {
      "type": "object",
      "properties": {
        "date": {
          "format": "date-time",
          "type": "string"
        },
        "dateTimeCode": {
          "type": "string"
        },
        "dateType": {
          "format": "int32",
          "enum": [
            10,
            37,
            38,
            69,
            70,
            79,
            96,
            97,
            98,
            99
          ],
          "type": "integer"
        },
        "timeType": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10
          ],
          "type": "integer"
        }
      }
    },
    "LadingInfo": {
      "type": "object",
      "properties": {
        "packagingFormCode": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18
          ],
          "type": "integer"
        },
        "ladingQuantity": {
          "type": "string"
        },
        "ladingDescription": {
          "type": "string"
        }
      }
    },
    "LoadContactInfo": {
      "type": "object",
      "properties": {
        "referenceIdentifications": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReferenceIdentification"
          }
        },
        "name": {
          "type": "string"
        },
        "communicationNumberQualifier": {
          "type": "string"
        },
        "communicationNumber": {
          "type": "string"
        },
        "contactFunctionCode": {
          "type": "string"
        },
        "contactInquiryReference": {
          "type": "string"
        }
      }
    },
    "GenerateKeysRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "InviteNewPartnerRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "serviceModel": {
          "$ref": "#/definitions/InviteNewPartnerServiceModel"
        }
      }
    },
    "InviteNewPartnerServiceModel": {
      "type": "object",
      "properties": {
        "partnerNumber": {
          "type": "string"
        },
        "initiatorChannelId": {
          "type": "string"
        },
        "initiatorChannel": {
          "$ref": "#/definitions/TradingChannelServiceModel"
        }
      }
    },
    "TradingChannelQueryRequest": {
      "type": "object",
      "properties": {
        "query": {
          "$ref": "#/definitions/Query"
        }
      }
    },
    "QueryResult[TradingChannelServiceModel]": {
      "type": "object",
      "properties": {
        "total": {
          "format": "int32",
          "type": "integer"
        },
        "result": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/TradingChannelServiceModel"
          }
        }
      }
    },
    "SendTestMessageRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "TradingPartnerQueryRequest": {
      "type": "object",
      "properties": {
        "channelId": {
          "type": "string"
        },
        "query": {
          "$ref": "#/definitions/Query"
        }
      }
    },
    "QueryResult[TradingPartnerServiceModel]": {
      "type": "object",
      "properties": {
        "total": {
          "format": "int32",
          "type": "integer"
        },
        "result": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/TradingPartnerServiceModel"
          }
        }
      }
    },
    "AcceptPartnerInvitationRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "serviceModel": {
          "$ref": "#/definitions/AcceptPartnerInvitationServiceModel"
        }
      }
    },
    "AcceptPartnerInvitationServiceModel": {
      "type": "object",
      "properties": {
        "channelId": {
          "type": "string"
        },
        "channel": {
          "$ref": "#/definitions/TradingChannelServiceModel"
        }
      }
    },
    "TradingPartnerInvitationServiceModel": {
      "type": "object",
      "properties": {
        "canAcceptInvitation": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "initiatorCompanyId": {
          "type": "string"
        },
        "initiatorCompany": {
          "$ref": "#/definitions/CompanyServiceModel"
        },
        "receiverCompanyId": {
          "type": "string"
        },
        "receiverCompany": {
          "$ref": "#/definitions/CompanyServiceModel"
        },
        "date": {
          "format": "date-time",
          "type": "string"
        },
        "status": {
          "format": "int32",
          "enum": [
            0,
            1,
            2
          ],
          "type": "integer"
        },
        "initiatorChannelId": {
          "type": "string"
        }
      }
    },
    "TradingPartnerInvitationQueryRequest": {
      "type": "object",
      "properties": {
        "query": {
          "$ref": "#/definitions/Query"
        }
      }
    },
    "QueryResult[TradingPartnerInvitationServiceModel]": {
      "type": "object",
      "properties": {
        "total": {
          "format": "int32",
          "type": "integer"
        },
        "result": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/TradingPartnerInvitationServiceModel"
          }
        }
      }
    },
    "TradingPartnerMessageQueryRequest": {
      "type": "object",
      "properties": {
        "referenceId": {
          "type": "string"
        },
        "query": {
          "$ref": "#/definitions/Query"
        }
      }
    },
    "QueryResult[TradingPartnerMessageServiceModel]": {
      "type": "object",
      "properties": {
        "total": {
          "format": "int32",
          "type": "integer"
        },
        "result": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/TradingPartnerMessageServiceModel"
          }
        }
      }
    },
    "TradingPartnerMessageServiceModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "tradingChannelId": {
          "type": "string"
        },
        "tradingChannel": {
          "$ref": "#/definitions/TradingChannelServiceModel"
        },
        "tradingPartnerId": {
          "type": "string"
        },
        "tradingPartner": {
          "$ref": "#/definitions/TradingPartnerServiceModel"
        },
        "type": {
          "format": "int32",
          "enum": [
            0,
            1
          ],
          "type": "integer"
        },
        "status": {
          "format": "int32",
          "enum": [
            0,
            1,
            2
          ],
          "type": "integer"
        },
        "subject": {
          "type": "string"
        },
        "content": {
          "type": "string"
        },
        "contentType": {
          "type": "string"
        },
        "processedOn": {
          "format": "date-time",
          "type": "string"
        },
        "responseStatusCode": {
          "format": "int32",
          "type": "integer"
        },
        "responseMessage": {
          "type": "string"
        },
        "dispositionNotificationTo": {
          "type": "string"
        },
        "referenceId": {
          "type": "string"
        }
      }
    },
    "TrailerQueryRequest": {
      "type": "object",
      "properties": {
        "query": {
          "$ref": "#/definitions/Query"
        }
      }
    },
    "QueryResult[TrailerServiceModel]": {
      "type": "object",
      "properties": {
        "total": {
          "format": "int32",
          "type": "integer"
        },
        "result": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/TrailerServiceModel"
          }
        }
      }
    },
    "TrailerServiceModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "trailerNumber": {
          "type": "string"
        },
        "label": {
          "type": "string",
          "readOnly": true
        },
        "externalIds": {
          "$ref": "#/definitions/ExternalIds"
        }
      }
    },
    "UserQueryRequest": {
      "type": "object",
      "properties": {
        "roleId": {
          "type": "string"
        },
        "query": {
          "$ref": "#/definitions/Query"
        }
      }
    },
    "QueryResult[UserServiceModel]": {
      "type": "object",
      "properties": {
        "total": {
          "format": "int32",
          "type": "integer"
        },
        "result": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserServiceModel"
          }
        }
      }
    },
    "VehicleQueryRequest": {
      "type": "object",
      "properties": {
        "query": {
          "$ref": "#/definitions/Query"
        }
      }
    },
    "QueryResult[VehicleServiceModel]": {
      "type": "object",
      "properties": {
        "total": {
          "format": "int32",
          "type": "integer"
        },
        "result": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/VehicleServiceModel"
          }
        }
      }
    },
    "CarrierApproveLoadRequest": {
      "type": "object",
      "properties": {
        "carrierQuoteRequestId": {
          "type": "string"
        }
      }
    },
    "CarrierCounterOfferLoadRequest": {
      "type": "object",
      "properties": {
        "carrierQuoteRequestId": {
          "type": "string"
        },
        "lineItems": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ShipmentFeeServiceModel"
          }
        }
      }
    },
    "QueryResult[CarrierQuoteRequestServiceModel]": {
      "type": "object",
      "properties": {
        "total": {
          "format": "int32",
          "type": "integer"
        },
        "result": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/CarrierQuoteRequestServiceModel"
          }
        }
      }
    },
    "ConfigurationServiceModel": {
      "type": "object",
      "properties": {
        "notifications": {
          "$ref": "#/definitions/NotificationsConfig"
        },
        "shipments": {
          "$ref": "#/definitions/ShipmentsConfig"
        }
      }
    },
    "NotificationsConfig": {
      "type": "object",
      "properties": {
        "documentSigned": {
          "type": "boolean"
        },
        "userId": {
          "type": "string"
        },
        "typeName": {
          "type": "string",
          "readOnly": true
        },
        "id": {
          "type": "string"
        },
        "isNew": {
          "type": "boolean",
          "readOnly": true
        },
        "correlatingIds": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "created": {
          "format": "date-time",
          "type": "string"
        },
        "lastModified": {
          "format": "date-time",
          "type": "string"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        }
      }
    },
    "ShipmentsConfig": {
      "type": "object",
      "properties": {
        "createForShipper": {
          "type": "boolean"
        },
        "bypassQuotes": {
          "type": "boolean"
        },
        "companyId": {
          "type": "string"
        },
        "typeName": {
          "type": "string",
          "readOnly": true
        },
        "id": {
          "type": "string"
        },
        "isNew": {
          "type": "boolean",
          "readOnly": true
        },
        "correlatingIds": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "created": {
          "format": "date-time",
          "type": "string"
        },
        "lastModified": {
          "format": "date-time",
          "type": "string"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        }
      }
    },
    "AnalyticServiceModel": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "data": {
          "type": "object"
        },
        "icon": {
          "type": "string"
        },
        "visible": {
          "type": "boolean"
        }
      }
    },
    "DocumentTypeServiceModel": {
      "type": "object",
      "properties": {
        "providerName": {
          "type": "string"
        },
        "label": {
          "type": "string"
        }
      }
    },
    "GetDocumentListRequest": {
      "type": "object",
      "properties": {
        "referenceId": {
          "type": "string"
        }
      }
    },
    "DocumentListItemServiceModel": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "status": {
          "format": "int32",
          "enum": [
            0,
            1
          ],
          "type": "integer"
        },
        "signaturesNeeded": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/RequiredSignatureServiceModel"
          }
        }
      }
    },
    "SignDocumentRequest": {
      "type": "object",
      "properties": {
        "shipmentId": {
          "type": "string"
        },
        "signatureId": {
          "type": "string"
        },
        "documentName": {
          "type": "string"
        },
        "signatureBase64": {
          "type": "string"
        },
        "printedName": {
          "type": "string"
        }
      }
    },
    "UploadImageDocumentRequest": {
      "type": "object",
      "properties": {
        "shipmentId": {
          "type": "string"
        },
        "documentName": {
          "type": "string"
        },
        "base64Image": {
          "type": "string"
        }
      }
    },
    "NotificationsServiceModel": {
      "type": "object",
      "properties": {
        "notifications": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/NotificationServiceModel"
          }
        },
        "counts": {
          "type": "object",
          "additionalProperties": {
            "format": "int32",
            "type": "integer"
          }
        },
        "totalUnread": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "NotificationServiceModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "isRead": {
          "type": "boolean"
        },
        "userId": {
          "type": "boolean"
        },
        "referenceId": {
          "type": "string"
        },
        "referenceType": {
          "type": "string"
        },
        "date": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "QueryResult[Object]": {
      "type": "object",
      "properties": {
        "total": {
          "format": "int32",
          "type": "integer"
        },
        "result": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      }
    },
    "PushMessageVm": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "QueryShipmentCarriersRequest": {
      "type": "object",
      "properties": {
        "shipmentId": {
          "type": "string"
        },
        "query": {
          "$ref": "#/definitions/Query"
        }
      }
    },
    "QueryResult[ShipmentCarrierServiceModel]": {
      "type": "object",
      "properties": {
        "total": {
          "format": "int32",
          "type": "integer"
        },
        "result": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ShipmentCarrierServiceModel"
          }
        }
      }
    },
    "ShipmentCarrierServiceModel": {
      "type": "object",
      "properties": {
        "carrierCompany": {
          "$ref": "#/definitions/CompanyServiceModel"
        },
        "quoteRequest": {
          "$ref": "#/definitions/CarrierQuoteRequestServiceModel"
        },
        "carrier": {
          "$ref": "#/definitions/CarrierServiceModel"
        },
        "deliveryWindowProbability": {
          "format": "int32",
          "type": "integer"
        },
        "incidentsLast30Days": {
          "format": "int32",
          "type": "integer"
        },
        "deliveriesToLocation": {
          "format": "int32",
          "type": "integer"
        },
        "routeProximity": {
          "format": "int32",
          "type": "integer"
        },
        "isMarkedNo": {
          "type": "boolean"
        },
        "quoteTotal": {
          "format": "double",
          "type": "number"
        },
        "profit": {
          "format": "double",
          "type": "number"
        },
        "margin": {
          "format": "double",
          "type": "number"
        },
        "marginPercent": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "ShipmentDriverDispatchRefreshRequest": {
      "type": "object",
      "properties": {
        "shipmentId": {
          "type": "string"
        },
        "force": {
          "type": "boolean"
        }
      }
    },
    "SaveLoadInformationRequest": {
      "type": "object",
      "properties": {
        "shipmentId": {
          "type": "string"
        },
        "loadInformation": {
          "$ref": "#/definitions/LoadInformationServiceModel"
        }
      }
    },
    "SaveStopsRequest": {
      "type": "object",
      "properties": {
        "shipmentId": {
          "type": "string"
        },
        "stops": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/StopServiceModel"
          }
        }
      }
    },
    "RefreshStopsRequest": {
      "type": "object",
      "properties": {
        "shipmentId": {
          "type": "string"
        }
      }
    },
    "DenyCarrierQuoteRequest": {
      "type": "object",
      "properties": {
        "carrierQuoteRequestId": {
          "type": "string"
        }
      }
    },
    "AwardCarrierLoadRequest": {
      "type": "object",
      "properties": {
        "carrierQuoteRequestId": {
          "type": "string"
        }
      }
    },
    "ShipmentFinalizeRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "object"
        }
      }
    },
    "SaveTrackingInformationRequest": {
      "type": "object",
      "properties": {
        "shipmentId": {
          "type": "string"
        },
        "trackingInformation": {
          "$ref": "#/definitions/TrackingInformationServiceModel"
        }
      }
    },
    "TrackingInformationServiceModel": {
      "type": "object",
      "properties": {
        "trackingLocations": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/TrackingLocationServiceModel"
          }
        },
        "trackingType": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3
          ],
          "type": "integer"
        },
        "minutesBetweenTracking": {
          "format": "int32",
          "type": "integer"
        },
        "thirdPartyProvider": {
          "type": "string"
        },
        "lastTrackingTime": {
          "format": "date-time",
          "type": "string"
        },
        "lastTrackingNotificationTime": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "AddTrackingLocationRequest": {
      "type": "object",
      "properties": {
        "shipmentId": {
          "type": "string"
        },
        "location": {
          "$ref": "#/definitions/TrackingLocationServiceModel"
        }
      }
    },
    "AssignDriverRequest": {
      "type": "object",
      "properties": {
        "shipmentId": {
          "type": "object"
        },
        "driverId": {
          "type": "string"
        },
        "actionName": {
          "type": "string"
        },
        "referenceId": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "CarrierSignRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true
        },
        "printedName": {
          "type": "string",
          "readOnly": true
        },
        "base64Signature": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "DeliverySignRequest": {
      "type": "object",
      "properties": {
        "shipmentId": {
          "type": "object"
        },
        "printedName": {
          "type": "string"
        },
        "base64Signature": {
          "type": "string"
        }
      }
    },
    "TokenResponse": {
      "type": "object",
      "properties": {
        "accessToken": {
          "type": "string",
          "readOnly": true
        },
        "identityToken": {
          "type": "string",
          "readOnly": true
        },
        "tokenType": {
          "type": "string",
          "readOnly": true
        },
        "refreshToken": {
          "type": "string",
          "readOnly": true
        },
        "errorDescription": {
          "type": "string",
          "readOnly": true
        },
        "expiresIn": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "raw": {
          "type": "string",
          "readOnly": true
        },
        "json": {
          "type": "object",
          "readOnly": true
        },
        "exception": {
          "type": "object"
        },
        "isError": {
          "type": "boolean",
          "readOnly": true
        },
        "errorType": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4
          ],
          "type": "integer",
          "readOnly": true
        },
        "httpStatusCode": {
          "format": "int32",
          "enum": [
            100,
            101,
            102,
            103,
            200,
            201,
            202,
            203,
            204,
            205,
            206,
            207,
            208,
            226,
            300,
            300,
            301,
            301,
            302,
            302,
            303,
            303,
            304,
            305,
            306,
            307,
            307,
            308,
            400,
            401,
            402,
            403,
            404,
            405,
            406,
            407,
            408,
            409,
            410,
            411,
            412,
            413,
            414,
            415,
            416,
            417,
            421,
            422,
            423,
            424,
            426,
            428,
            429,
            431,
            451,
            500,
            501,
            502,
            503,
            504,
            505,
            506,
            507,
            508,
            510,
            511
          ],
          "type": "integer",
          "readOnly": true
        },
        "httpErrorReason": {
          "type": "string",
          "readOnly": true
        },
        "error": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "AccountingInvoiceDateRangeServiceModel": {
      "type": "object",
      "properties": {
        "startDate": {
          "format": "date-time",
          "type": "string"
        },
        "endDate": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "AccountingInvoiceIncludeServiceModel": {
      "type": "object",
      "properties": {
        "reconciled": {
          "type": "boolean"
        },
        "incomplete": {
          "type": "boolean"
        }
      }
    }
  },
  "securityDefinitions": {
    "oauth2": {
      "flow": "password",
      "tokenUrl": "https://app.freighttrust.net/connect/token",
      "scopes": {
        "api1": "Harbor API"
      },
      "type": "oauth2"
    }
  }
}